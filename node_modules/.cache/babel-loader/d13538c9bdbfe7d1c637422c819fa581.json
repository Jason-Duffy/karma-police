{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nvar subredditButtonSlice = createSlice({\n  name: 'subredditButton',\n  initialState: 'closed',\n  // assuming the button starts off in the 'off' state\n  reducers: {\n    toggleSubredditButtonState: function toggleSubredditButtonState(state) {\n      return state === 'closed' ? 'open' : 'closed';\n    }\n  }\n});\nvar toggleSubredditButtonState = subredditButtonSlice.actions.toggleSubredditButtonState;\nexport { toggleSubredditButtonState };\nexport var selectSubredditButtonState = function selectSubredditButtonState(state) {\n  return state.subredditButton;\n};\nexport default subredditButtonSlice.reducer;","map":{"version":3,"names":["createSlice","subredditButtonSlice","name","initialState","reducers","toggleSubredditButtonState","state","actions","selectSubredditButtonState","subredditButton","reducer"],"sources":["C:/Users/Jason/Documents/GitHub/karma-police/src/redux/subredditButtonSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst subredditButtonSlice = createSlice({\r\n    name: 'subredditButton',\r\n    initialState: 'closed',  // assuming the button starts off in the 'off' state\r\n    reducers: {\r\n        toggleSubredditButtonState: (state) => state === 'closed' ? 'open' : 'closed',\r\n    },\r\n});\r\n\r\nexport const { toggleSubredditButtonState } = subredditButtonSlice.actions;\r\n\r\nexport const selectSubredditButtonState = state => state.subredditButton;\r\n\r\nexport default subredditButtonSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,IAAMC,oBAAoB,GAAGD,WAAW,CAAC;EACrCE,IAAI,EAAE,iBAAiB;EACvBC,YAAY,EAAE,QAAQ;EAAG;EACzBC,QAAQ,EAAE;IACNC,0BAA0B,EAAE,SAAAA,2BAACC,KAAK;MAAA,OAAKA,KAAK,KAAK,QAAQ,GAAG,MAAM,GAAG,QAAQ;IAAA;EACjF;AACJ,CAAC,CAAC;AAAC,IAEYD,0BAA0B,GAAKJ,oBAAoB,CAACM,OAAO,CAA3DF,0BAA0B;AAAA,SAAAA,0BAAA;AAEzC,OAAO,IAAMG,0BAA0B,GAAG,SAA7BA,0BAA0BA,CAAGF,KAAK;EAAA,OAAIA,KAAK,CAACG,eAAe;AAAA;AAExE,eAAeR,oBAAoB,CAACS,OAAO"},"metadata":{},"sourceType":"module"}