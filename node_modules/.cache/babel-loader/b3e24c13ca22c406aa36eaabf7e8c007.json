{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nvar arrestedButtonSlice = createSlice({\n  name: 'arrestedButton',\n  initialState: 'closed',\n  // assuming the button starts off in the 'off' state\n  reducers: {\n    toggleArrestedButtonState: function toggleArrestedButtonState(state) {\n      return state === 'closed' ? 'open' : 'closed';\n    }\n  }\n});\nvar toggleArrestedButtonState = arrestedButtonSlice.actions.toggleArrestedButtonState;\nexport { toggleArrestedButtonState };\nexport var selectArrestedButtonState = function selectArrestedButtonState(state) {\n  return state.arrestedButton;\n};\nexport default arrestedButtonSlice.reducer;","map":{"version":3,"names":["createSlice","arrestedButtonSlice","name","initialState","reducers","toggleArrestedButtonState","state","actions","selectArrestedButtonState","arrestedButton","reducer"],"sources":["C:/Users/Jason/Documents/GitHub/karma-police/src/redux/arrestedButtonSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst arrestedButtonSlice = createSlice({\r\n    name: 'arrestedButton',\r\n    initialState: 'closed',  // assuming the button starts off in the 'off' state\r\n    reducers: {\r\n        toggleArrestedButtonState: (state) => state === 'closed' ? 'open' : 'closed',\r\n    },\r\n});\r\n\r\nexport const { toggleArrestedButtonState } = arrestedButtonSlice.actions;\r\n\r\nexport const selectArrestedButtonState = state => state.arrestedButton;\r\n\r\nexport default arrestedButtonSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,IAAMC,mBAAmB,GAAGD,WAAW,CAAC;EACpCE,IAAI,EAAE,gBAAgB;EACtBC,YAAY,EAAE,QAAQ;EAAG;EACzBC,QAAQ,EAAE;IACNC,yBAAyB,EAAE,SAAAA,0BAACC,KAAK;MAAA,OAAKA,KAAK,KAAK,QAAQ,GAAG,MAAM,GAAG,QAAQ;IAAA;EAChF;AACJ,CAAC,CAAC;AAAC,IAEYD,yBAAyB,GAAKJ,mBAAmB,CAACM,OAAO,CAAzDF,yBAAyB;AAAA,SAAAA,yBAAA;AAExC,OAAO,IAAMG,yBAAyB,GAAG,SAA5BA,yBAAyBA,CAAGF,KAAK;EAAA,OAAIA,KAAK,CAACG,cAAc;AAAA;AAEtE,eAAeR,mBAAmB,CAACS,OAAO"},"metadata":{},"sourceType":"module"}