{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nvar arrestedSlice = createSlice({\n  name: 'arrested',\n  initialState: [],\n  reducers: {\n    addArrestedUser: function addArrestedUser(state, action) {\n      // Add a specified user tp the array.\n      state.push(action.payload);\n    },\n    removeArrestedUser: function removeArrestedUser(state, action) {\n      // Return a new state array that doesn't include the user specified in the payload\n      return state.filter(function (user) {\n        return user !== action.payload;\n      });\n    },\n    removeAllArrestedUsers: function removeAllArrestedUsers() {\n      // Reset state to its initial value\n      return [];\n    }\n  }\n});\nvar _arrestedSlice$action = arrestedSlice.actions,\n  addArrestedUser = _arrestedSlice$action.addArrestedUser,\n  removeArrestedUser = _arrestedSlice$action.removeArrestedUser,\n  removeAllArrestedUsers = _arrestedSlice$action.removeAllArrestedUsers;\nexport { addArrestedUser, removeArrestedUser, removeAllArrestedUsers };\nexport var selectArrestedUsers = function selectArrestedUsers(state) {\n  return state.arrested;\n};\nexport default arrestedSlice.reducer;","map":{"version":3,"names":["createSlice","arrestedSlice","name","initialState","reducers","addArrestedUser","state","action","push","payload","removeArrestedUser","filter","user","removeAllArrestedUsers","_arrestedSlice$action","actions","selectArrestedUsers","arrested","reducer"],"sources":["C:/Users/Jason/Documents/GitHub/karma-police/src/redux/arrestedSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst arrestedSlice = createSlice({\r\n    name: 'arrested',\r\n    initialState: [],\r\n    reducers: {\r\n        addArrestedUser: (state, action) => {\r\n            // Add a specified user tp the array.\r\n            state.push(action.payload);\r\n        },\r\n        removeArrestedUser: (state, action) => {\r\n            // Return a new state array that doesn't include the user specified in the payload\r\n            return state.filter(user => user !== action.payload);\r\n        },\r\n        removeAllArrestedUsers: () => {\r\n            // Reset state to its initial value\r\n            return [];\r\n        },\r\n    },\r\n});\r\n\r\nexport const { addArrestedUser, removeArrestedUser, removeAllArrestedUsers } = arrestedSlice.actions;\r\n\r\nexport const selectArrestedUsers = state => state.arrested;\r\n\r\nexport default arrestedSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,IAAMC,aAAa,GAAGD,WAAW,CAAC;EAC9BE,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE;IACNC,eAAe,EAAE,SAAAA,gBAACC,KAAK,EAAEC,MAAM,EAAK;MAChC;MACAD,KAAK,CAACE,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IAC9B,CAAC;IACDC,kBAAkB,EAAE,SAAAA,mBAACJ,KAAK,EAAEC,MAAM,EAAK;MACnC;MACA,OAAOD,KAAK,CAACK,MAAM,CAAC,UAAAC,IAAI;QAAA,OAAIA,IAAI,KAAKL,MAAM,CAACE,OAAO;MAAA,EAAC;IACxD,CAAC;IACDI,sBAAsB,EAAE,SAAAA,uBAAA,EAAM;MAC1B;MACA,OAAO,EAAE;IACb;EACJ;AACJ,CAAC,CAAC;AAAC,IAAAC,qBAAA,GAE4Eb,aAAa,CAACc,OAAO;EAArFV,eAAe,GAAAS,qBAAA,CAAfT,eAAe;EAAEK,kBAAkB,GAAAI,qBAAA,CAAlBJ,kBAAkB;EAAEG,sBAAsB,GAAAC,qBAAA,CAAtBD,sBAAsB;AAAA,SAAAR,eAAA,EAAAK,kBAAA,EAAAG,sBAAA;AAE1E,OAAO,IAAMG,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAGV,KAAK;EAAA,OAAIA,KAAK,CAACW,QAAQ;AAAA;AAE1D,eAAehB,aAAa,CAACiB,OAAO"},"metadata":{},"sourceType":"module"}