{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\Jason\\\\Documents\\\\GitHub\\\\karma-police\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _templateObject,\n  _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\Jason\\\\Documents\\\\GitHub\\\\karma-police\\\\src\\\\components\\\\Posts\\\\Card\\\\CardContent\\\\PostMedia\\\\PostMedia.js\";\n// React module imports. \nimport React from \"react\";\nimport he from 'he';\nimport styled from 'styled-components';\n// Local imports.\nimport GalleryViewer from \"./GalleryViewer/GalleryViewer\";\nimport { useThemeColors } from \"../../../../../hooks/themeHooks\";\n// Style imports.\nimport './PostMedia.css';\n\n// Create a styled component that will apply the theme colors.\nvar StyledLink = styled.a(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    color: \", \";\\n\\n    &:link {\\n    color: \", \";\\n    }\\n\\n    &:visited {\\n    color: \", \";\\n    }\"])), function (props) {\n  return props.themeColor;\n}, function (props) {\n  return props.themeColor;\n}, function (props) {\n  return props.themeColor;\n});\nvar PostMedia = function PostMedia(_ref) {\n  var post = _ref.post;\n  var galleryData = post.galleryData,\n    mediaMetaData = post.mediaMetaData,\n    crossposts = post.crossposts,\n    media = post.media,\n    postHint = post.postHint,\n    isVideo = post.isVideo,\n    urlOverridden = post.urlOverridden,\n    url = post.url,\n    postTitle = post.postTitle; // Decode urls.\n  var decodedUrl = he.decode(url);\n  var decodedUrlOverridden = he.decode(url);\n\n  // Get theme colors.\n  var themeColors = useThemeColors();\n  var accentColor = themeColors.accent;\n\n  // Extract decoded URLs from galleryData\n  var galleryImages = [];\n  if (galleryData) {\n    galleryImages = galleryData.items.map(function (item) {\n      var galleryImageUrl = mediaMetaData && mediaMetaData[item.media_id].s.u;\n      // Remove escaped & character encodings from URL.\n      return galleryImageUrl && he.decode(galleryImageUrl);\n    });\n  }\n  var crosspostGalleryImages = [];\n  if (crossposts && crossposts[0].gallery_data) {\n    crosspostGalleryImages = crossposts[0].gallery_data.items.map(function (item) {\n      var galleryImageUrl = crossposts[0].media_metadata && crossposts[0].media_metadata[item.media_id].s.u;\n      // Remove escaped & character encodings from URL.\n      return galleryImageUrl && he.decode(galleryImageUrl);\n    });\n  }\n  var renderMedia = function renderMedia() {\n    if (media && media.type === \"youtube.com\") {\n      return renderYoutubeVideo();\n    } else if (media && media.reddit_video) {\n      return renderRedditVideo();\n    } else if (crossposts) {\n      if (crossposts[0].media && crossposts[0].media.reddit_video) {\n        return renderCrosspostRedditVideo();\n      } else if (crossposts[0].gallery_data) {\n        return renderCrosspostImageGallery();\n      } else if (postHint === \"image\" && !crossposts[0].is_video && !crossposts[0].media) {\n        return renderImage();\n      } else if (crossposts[0].removed_by_category === \"deleted\") {\n        return /*#__PURE__*/React.createElement(\"p\", {\n          className: \"error-message\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 24\n          }\n        }, \"This post has been deleted.\");\n      } else {\n        console.log(\"Crosspost Error - Media Type Not Recognised\");\n        console.log(post);\n        return;\n      }\n    } else if (postHint === \"image\" && !isVideo && !media) {\n      return renderImage();\n    } else if (galleryData) {\n      return renderImageGallery();\n    } else if (postHint === \"link\") {\n      return renderUrl();\n    } else if (urlOverridden) {\n      return renderUrlOverridden();\n    } else {\n      return /*#__PURE__*/React.createElement(React.Fragment, null);\n    }\n  };\n  var renderYoutubeVideo = function renderYoutubeVideo() {\n    var videoUrl = media.oembed.html.match(/src=[\"'](.*?)[\"']/)[1];\n    var videoTitle = he.decode(media.oembed.title);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"youtube-video-container\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"iframe\", {\n      className: \"video\",\n      title: videoTitle,\n      src: videoUrl,\n      allowFullScreen: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }));\n  };\n  var renderRedditVideo = function renderRedditVideo() {\n    var decodedUrl = he.decode(media.reddit_video.fallback_url);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"reddit-video-container\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"iframe\", {\n      className: \"video\",\n      title: postTitle,\n      width: media.reddit_video.width,\n      height: media.reddit_video.height,\n      src: decodedUrl,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }));\n  };\n  var renderCrosspostRedditVideo = function renderCrosspostRedditVideo() {\n    var decodedUrl = he.decode(crossposts[0].media.reddit_video.fallback_url);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"reddit-video-container\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"iframe\", {\n      className: \"video\",\n      title: postTitle,\n      width: crossposts[0].media.reddit_video.width,\n      height: crossposts[0].media.reddit_video.height,\n      src: decodedUrl,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }));\n  };\n  var renderImage = function renderImage() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"image-container\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"post-image\",\n      src: decodedUrl,\n      alt: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }));\n  };\n  var renderImageGallery = function renderImageGallery() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"image-container\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }\n    }, galleryImages.length > 0 && /*#__PURE__*/React.createElement(GalleryViewer, {\n      images: galleryImages,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 46\n      }\n    }));\n  };\n  var renderCrosspostImageGallery = function renderCrosspostImageGallery() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"image-container\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }\n    }, crosspostGalleryImages.length > 0 && /*#__PURE__*/React.createElement(GalleryViewer, {\n      images: crosspostGalleryImages,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 55\n      }\n    }));\n  };\n  var renderUrl = function renderUrl() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"link-container\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(StyledLink, {\n      href: decodedUrl,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      themeColor: accentColor,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }\n    }, decodedUrl));\n  };\n  var renderUrlOverridden = function renderUrlOverridden() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"link-container\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(StyledLink, {\n      href: decodedUrlOverridden,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      themeColor: accentColor,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }\n    }, decodedUrlOverridden));\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }, renderMedia());\n};\nexport default PostMedia;","map":{"version":3,"names":["React","he","styled","GalleryViewer","useThemeColors","StyledLink","a","_templateObject","_taggedTemplateLiteral","props","themeColor","PostMedia","_ref","post","galleryData","mediaMetaData","crossposts","media","postHint","isVideo","urlOverridden","url","postTitle","decodedUrl","decode","decodedUrlOverridden","themeColors","accentColor","accent","galleryImages","items","map","item","galleryImageUrl","media_id","s","u","crosspostGalleryImages","gallery_data","media_metadata","renderMedia","type","renderYoutubeVideo","reddit_video","renderRedditVideo","renderCrosspostRedditVideo","renderCrosspostImageGallery","is_video","renderImage","removed_by_category","createElement","className","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","console","log","renderImageGallery","renderUrl","renderUrlOverridden","Fragment","videoUrl","oembed","html","match","videoTitle","title","src","allowFullScreen","fallback_url","width","height","alt","length","images","href","target","rel"],"sources":["C:/Users/Jason/Documents/GitHub/karma-police/src/components/Posts/Card/CardContent/PostMedia/PostMedia.js"],"sourcesContent":["// React module imports. \r\nimport React from \"react\";\r\nimport he from 'he';\r\nimport styled from 'styled-components';\r\n// Local imports.\r\nimport GalleryViewer from \"./GalleryViewer/GalleryViewer\";\r\nimport { useThemeColors } from \"../../../../../hooks/themeHooks\";\r\n// Style imports.\r\nimport './PostMedia.css';\r\n\r\n// Create a styled component that will apply the theme colors.\r\nconst StyledLink = styled.a`\r\n    color: ${props => props.themeColor};\r\n\r\n    &:link {\r\n    color: ${props => props.themeColor};\r\n    }\r\n\r\n    &:visited {\r\n    color: ${props => props.themeColor};\r\n    }`;\r\n\r\nconst PostMedia = ({ post }) => {\r\n\r\n    const {\r\n        galleryData,\r\n        mediaMetaData,\r\n        crossposts,\r\n        media,\r\n        postHint,\r\n        isVideo,\r\n        urlOverridden,\r\n        url,\r\n        postTitle\r\n    } = post;\r\n\r\n    // Decode urls.\r\n    const decodedUrl = he.decode(url);\r\n    const decodedUrlOverridden = he.decode(url);\r\n\r\n    // Get theme colors.\r\n    const themeColors = useThemeColors();\r\n    const accentColor = themeColors.accent;\r\n\r\n\r\n    // Extract decoded URLs from galleryData\r\n    let galleryImages = [];\r\n    if (galleryData) {\r\n        galleryImages = galleryData.items.map((item) => {\r\n            const galleryImageUrl = mediaMetaData && mediaMetaData[item.media_id].s.u;\r\n            // Remove escaped & character encodings from URL.\r\n            return galleryImageUrl && he.decode(galleryImageUrl);\r\n        });\r\n    }\r\n\r\n    let crosspostGalleryImages = [];\r\n    if (crossposts && crossposts[0].gallery_data) {\r\n        crosspostGalleryImages = crossposts[0].gallery_data.items.map((item) => {\r\n            const galleryImageUrl = crossposts[0].media_metadata && crossposts[0].media_metadata[item.media_id].s.u;\r\n            // Remove escaped & character encodings from URL.\r\n            return galleryImageUrl && he.decode(galleryImageUrl);\r\n        });\r\n    }\r\n\r\n    const renderMedia = () => {\r\n        if (media && media.type === \"youtube.com\") {\r\n            return renderYoutubeVideo();\r\n        } else if (media && media.reddit_video) {\r\n            return renderRedditVideo();\r\n        } else if (crossposts) {\r\n            if (crossposts[0].media && crossposts[0].media.reddit_video) {\r\n                return renderCrosspostRedditVideo();\r\n            } else if (crossposts[0].gallery_data) {\r\n                return renderCrosspostImageGallery();\r\n            } else if (postHint === \"image\" && !crossposts[0].is_video && !crossposts[0].media) {\r\n                return renderImage();\r\n            } else if (crossposts[0].removed_by_category === \"deleted\") {\r\n                return <p className=\"error-message\">This post has been deleted.</p>\r\n            } else {\r\n                console.log(\"Crosspost Error - Media Type Not Recognised\");\r\n                console.log(post);\r\n                return;\r\n            }\r\n        } else if (postHint === \"image\" && !isVideo && !media) {\r\n            return renderImage();\r\n        } else if (galleryData) {\r\n            return renderImageGallery();\r\n        } else if (postHint === \"link\") {\r\n            return renderUrl();\r\n        } else if (urlOverridden) {\r\n            return renderUrlOverridden();\r\n        } else {\r\n            return <></>;\r\n        }\r\n    }\r\n\r\n    const renderYoutubeVideo = () => {\r\n        const videoUrl = media.oembed.html.match(/src=[\"'](.*?)[\"']/)[1];\r\n        const videoTitle = he.decode(media.oembed.title);\r\n        return (\r\n            <div className=\"youtube-video-container\">\r\n                <iframe\r\n                    className=\"video\"\r\n                    title={videoTitle}\r\n                    src={videoUrl}\r\n                    allowFullScreen>\r\n                </iframe>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const renderRedditVideo = () => {\r\n        const decodedUrl = he.decode(media.reddit_video.fallback_url);\r\n        return (\r\n            <div className=\"reddit-video-container\">\r\n                <iframe\r\n                    className=\"video\"\r\n                    title={postTitle}\r\n                    width={media.reddit_video.width}\r\n                    height={media.reddit_video.height}\r\n                    src={decodedUrl}>\r\n                </iframe>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const renderCrosspostRedditVideo = () => {\r\n        const decodedUrl = he.decode(crossposts[0].media.reddit_video.fallback_url);\r\n        return (\r\n            <div className=\"reddit-video-container\">\r\n                <iframe\r\n                    className=\"video\"\r\n                    title={postTitle}\r\n                    width={crossposts[0].media.reddit_video.width}\r\n                    height={crossposts[0].media.reddit_video.height}\r\n                    src={decodedUrl}>\r\n                </iframe>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const renderImage = () => {\r\n        return (\r\n            <div className=\"image-container\">\r\n                <img className=\"post-image\" src={decodedUrl} alt=\"\" />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const renderImageGallery = () => {\r\n        return (\r\n            <div className=\"image-container\">\r\n                {galleryImages.length > 0 && <GalleryViewer images={galleryImages} />}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const renderCrosspostImageGallery = () => {\r\n        return (\r\n            <div className=\"image-container\">\r\n                {crosspostGalleryImages.length > 0 && <GalleryViewer images={crosspostGalleryImages} />}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const renderUrl = () => {\r\n        return (\r\n            <div className=\"link-container\">\r\n                <StyledLink href={decodedUrl} target=\"_blank\" rel=\"noopener noreferrer\" themeColor={accentColor}>\r\n                    {decodedUrl}\r\n                </StyledLink>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const renderUrlOverridden = () => {\r\n        return (\r\n            <div className=\"link-container\">\r\n                <StyledLink href={decodedUrlOverridden} target=\"_blank\" rel=\"noopener noreferrer\" themeColor={accentColor}>\r\n                    {decodedUrlOverridden}\r\n                </StyledLink>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {renderMedia()}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostMedia;"],"mappings":"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"},"metadata":{},"sourceType":"module"}