{"map":"{\"version\":3,\"sources\":[\"C:/Users/Jason/Documents/GitHub/karma-police/src/redux/themeSlice.js\",\"C:/Users/Jason/Documents/GitHub/karma-police/src/hooks/themeHooks.js\",\"C:/Users/Jason/Documents/GitHub/karma-police/src/redux/menuButtonSlice.js\",\"C:/Users/Jason/Documents/GitHub/karma-police/src/components/Header/DisplayToggle/DisplayToggle.js\",\"C:/Users/Jason/Documents/GitHub/karma-police/src/components/Header/Searchbar/Searchbar.js\",\"C:/Users/Jason/Documents/GitHub/karma-police/src/components/Header/MenuButton/MenuButton.js\",\"C:/Users/Jason/Documents/GitHub/karma-police/src/redux/sortSlice.js\",\"C:/Users/Jason/Documents/GitHub/karma-police/src/elements/SortButtons/SortButtons.js\",\"C:/Users/Jason/Documents/GitHub/karma-police/src/redux/subredditButtonSlice.js\",\"C:/Users/Jason/Documents/GitHub/karma-police/src/elements/SubredditsButton/SubredditsButton.js\",\"C:/Users/Jason/Documents/GitHub/karma-police/src/redux/subredditSlice.js\",\"C:/Users/Jason/Documents/GitHub/karma-police/src/elements/SubredditList/SubredditList.js\",\"C:/Users/Jason/Documents/GitHub/karma-police/src/redux/arrestedButtonSlice.js\",\"C:/Users/Jason/Documents/GitHub/karma-police/src/elements/ArrestedButton/ArrestedButton.js\",\"C:/Users/Jason/Documents/GitHub/karma-police/src/redux/arrestedSlice.js\",\"C:/Users/Jason/Documents/GitHub/karma-police/src/elements/ArrestsList/ArrestsList.js\",\"C:/Users/Jason/Documents/GitHub/karma-police/src/components/Header/Header.js\",\"C:/Users/Jason/Documents/GitHub/karma-police/src/components/Header/Sort/Sort.js\",\"C:/Users/Jason/Documents/GitHub/karma-police/src/components/Sidebar/Sidebar.js\",\"C:/Users/Jason/Documents/GitHub/karma-police/src/components/Posts/Card/UserInfo/UserInfo.js\",\"C:/Users/Jason/Documents/GitHub/karma-police/src/components/Posts/Card/CardContent/PostMedia/GalleryViewer/GalleryViewer.js\",\"C:/Users/Jason/Documents/GitHub/karma-police/src/components/Posts/Card/CardContent/PostMedia/PostMedia.js\",\"C:/Users/Jason/Documents/GitHub/karma-police/src/components/Posts/Card/CardContent/PostText/PostText.js\",\"C:/Users/Jason/Documents/GitHub/karma-police/src/components/Posts/Card/CardContent/CardContent.js\",\"C:/Users/Jason/Documents/GitHub/karma-police/src/components/Posts/Card/PostInfo/PostInfo.js\",\"C:/Users/Jason/Documents/GitHub/karma-police/src/components/Posts/Card/ArrestAction/ArrestAction.js\",\"C:/Users/Jason/Documents/GitHub/karma-police/src/components/Posts/Card/Card.js\",\"C:/Users/Jason/Documents/GitHub/karma-police/src/redux/subredditDataSlice.js\",\"C:/Users/Jason/Documents/GitHub/karma-police/src/components/Posts/Posts.js\",\"C:/Users/Jason/Documents/GitHub/karma-police/src/containers/App/App.js\",\"C:/Users/Jason/Documents/GitHub/karma-police/src/redux/store.js\",\"C:/Users/Jason/Documents/GitHub/karma-police/src/index.js\"],\"names\":[\"themeColors\",\"light\",\"background\",\"primaryText\",\"secondaryText\",\"accent\",\"border\",\"dark\",\"themeSlice\",\"createSlice\",\"name\",\"initialState\",\"value\",\"reducers\",\"toggleTheme\",\"state\",\"actions\",\"selectTheme\",\"theme\",\"useThemeColors\",\"useSelector\",\"useThemeObject\",\"property\",\"color\",\"styleObject\",\"menuButtonSlice\",\"toggleMenuButtonState\",\"selectMenuButtonState\",\"menu\",\"Icon\",\"dispatch\",\"useDispatch\",\"toggleThemeMode\",\"React\",\"createElement\",\"FaMoon\",\"onClick\",\"size\",\"FaSun\",\"DisplayToggle\",\"className\",\"Searchbar\",\"_useState\",\"useState\",\"_useState2\",\"_slicedToArray\",\"isFocused\",\"setIsFocused\",\"focusStyles\",\"boxShadow\",\"concat\",\"borderColor\",\"outline\",\"type\",\"placeholder\",\"style\",\"onFocus\",\"onBlur\",\"MenuButton\",\"buttonColor\",\"menuButtonState\",\"menuButtonClass\",\"HiMenu\",\"sortSlice\",\"setSortOrder\",\"action\",\"payload\",\"selectSort\",\"sort\",\"Sort\",\"accentColor\",\"sortMethod\",\"changeSortMethod\",\"method\",\"FaArrowCircleDown\",\"FaArrowCircleUp\",\"subredditButtonSlice\",\"toggleSubredditButtonState\",\"selectSubredditButtonState\",\"subredditButton\",\"SubredditsButton\",\"buttonStyle\",\"buttonText\",\"id\",\"subredditSlice\",\"setSubreddit\",\"selectSubreddit\",\"subreddit\",\"SubredditList\",\"currentSubreddit\",\"changeSubreddit\",\"subredditList\",\"map\",\"i\",\"_objectSpread\",\"textDecoration\",\"fontWeight\",\"key\",\"arrestedButtonSlice\",\"toggleArrestedButtonState\",\"selectArrestedButtonState\",\"arrestedButton\",\"ArrestedButton\",\"arrestedSlice\",\"addArrestedUser\",\"push\",\"removeArrestedUser\",\"filter\",\"user\",\"removeAllArrestedUsers\",\"_arrestedSlice$action\",\"selectArrestedUsers\",\"arrested\",\"ArrestsList\",\"arrestedUsers\",\"emptyMessage\",\"length\",\"handleRemoveUser\",\"Fragment\",\"Header\",\"menuBackground\",\"subredditButtonState\",\"arrestedButtonState\",\"menuContainerClass\",\"srListContainerClass\",\"arrestedListContainerClass\",\"useEffect\",\"SortButtons\",\"SubredditMenu\",\"UserInfo\",\"_ref\",\"_post$userData\",\"post\",\"userData\",\"pfp\",\"username\",\"imageUrl\",\"shortUrl\",\"split\",\"src\",\"alt\",\"width\",\"height\",\"FaUserCircle\",\"GalleryViewer\",\"images\",\"currentIndex\",\"setCurrentIndex\",\"currentImage\",\"FaArrowAltCircleLeft\",\"prevIndex\",\"FaArrowAltCircleRight\",\"StyledLink\",\"styled\",\"a\",\"_templateObject\",\"_taggedTemplateLiteral\",\"props\",\"themeColor\",\"PostMedia\",\"galleryData\",\"mediaMetaData\",\"crossposts\",\"media\",\"postHint\",\"isVideo\",\"urlOverridden\",\"url\",\"postTitle\",\"decodedUrl\",\"he\",\"decode\",\"decodedUrlOverridden\",\"galleryImages\",\"items\",\"item\",\"galleryImageUrl\",\"media_id\",\"s\",\"u\",\"crosspostGalleryImages\",\"gallery_data\",\"media_metadata\",\"renderYoutubeVideo\",\"videoUrl\",\"oembed\",\"html\",\"match\",\"videoTitle\",\"title\",\"allowFullScreen\",\"renderRedditVideo\",\"reddit_video\",\"fallback_url\",\"renderCrosspostRedditVideo\",\"renderImage\",\"renderImageGallery\",\"renderCrosspostImageGallery\",\"renderUrl\",\"href\",\"target\",\"rel\",\"renderUrlOverridden\",\"is_video\",\"removed_by_category\",\"console\",\"log\",\"PostTextContainer\",\"div\",\"linkColor\",\"headingColor\",\"textColor\",\"PostText\",\"postText\",\"decodedText\",\"sanitisedHTML\",\"selftext_html\",\"DOMPurify\",\"sanitize\",\"postTextRef\",\"useRef\",\"host\",\"window\",\"location\",\"origin\",\"current\",\"links\",\"getElementsByTagName\",\"startsWith\",\"replace\",\"dangerouslySetInnerHTML\",\"__html\",\"ref\",\"CardContent\",\"pollData\",\"decodedTitle\",\"options\",\"option\",\"text\",\"renderPoll\",\"PostInfo\",\"created\",\"comments\",\"karma\",\"timeStamp\",\"Date\",\"unit\",\"seconds\",\"now\",\"minutes\",\"Math\",\"round\",\"hours\",\"days\",\"floor\",\"FaYinYang\",\"FaRegClock\",\"FaRegComment\",\"ArrestAction\",\"GiHandcuffs\",\"Card\",\"subredditDataSlice\",\"setSubredditData\",\"selectSubredditData\",\"subredditData\",\"_regeneratorRuntime\",\"exports\",\"Op\",\"Object\",\"prototype\",\"hasOwn\",\"hasOwnProperty\",\"defineProperty\",\"obj\",\"desc\",\"$Symbol\",\"Symbol\",\"iteratorSymbol\",\"iterator\",\"asyncIteratorSymbol\",\"asyncIterator\",\"toStringTagSymbol\",\"toStringTag\",\"define\",\"enumerable\",\"configurable\",\"writable\",\"err\",\"wrap\",\"innerFn\",\"outerFn\",\"self\",\"tryLocsList\",\"protoGenerator\",\"Generator\",\"generator\",\"create\",\"context\",\"Context\",\"makeInvokeMethod\",\"tryCatch\",\"fn\",\"arg\",\"call\",\"ContinueSentinel\",\"GeneratorFunction\",\"GeneratorFunctionPrototype\",\"IteratorPrototype\",\"this\",\"getProto\",\"getPrototypeOf\",\"NativeIteratorPrototype\",\"values\",\"Gp\",\"defineIteratorMethods\",\"forEach\",\"_invoke\",\"AsyncIterator\",\"PromiseImpl\",\"previousPromise\",\"callInvokeWithMethodAndArg\",\"resolve\",\"reject\",\"invoke\",\"record\",\"result\",\"__await\",\"then\",\"unwrapped\",\"error\",\"Error\",\"doneResult\",\"delegate\",\"delegateResult\",\"maybeInvokeDelegate\",\"sent\",\"_sent\",\"dispatchException\",\"abrupt\",\"done\",\"methodName\",\"undefined\",\"return\",\"TypeError\",\"info\",\"resultName\",\"next\",\"nextLoc\",\"pushTryEntry\",\"locs\",\"entry\",\"tryLoc\",\"catchLoc\",\"finallyLoc\",\"afterLoc\",\"tryEntries\",\"resetTryEntry\",\"completion\",\"reset\",\"iterable\",\"iteratorMethod\",\"isNaN\",\"displayName\",\"isGeneratorFunction\",\"genFun\",\"ctor\",\"constructor\",\"mark\",\"setPrototypeOf\",\"__proto__\",\"awrap\",\"async\",\"Promise\",\"iter\",\"keys\",\"val\",\"object\",\"reverse\",\"pop\",\"skipTempReset\",\"prev\",\"charAt\",\"slice\",\"stop\",\"rootRecord\",\"rval\",\"exception\",\"handle\",\"loc\",\"caught\",\"hasCatch\",\"hasFinally\",\"finallyEntry\",\"complete\",\"finish\",\"catch\",\"thrown\",\"delegateYield\",\"Posts\",\"fetchSubreddits\",\"_asyncToGenerator\",\"_callee2\",\"subredditName\",\"response\",\"data\",\"postsWithUserData\",\"_context2\",\"fetch\",\"json\",\"all\",\"children\",\"_ref2\",\"_callee\",\"child\",\"userDataResponse\",\"_context\",\"author\",\"num_comments\",\"post_hint\",\"poll_data\",\"crosspost_parent_list\",\"url_overridden_by_dest\",\"total_karma\",\"icon_img\",\"_x\",\"apply\",\"arguments\",\"t0\",\"scrollTo\",\"filteredPosts\",\"includes\",\"sortedSubredditData\",\"_toConsumableArray\",\"b\",\"App\",\"document\",\"body\",\"backgroundColor\",\"pageContainer\",\"querySelector\",\"classList\",\"add\",\"remove\",\"Sidebar\",\"configureStore\",\"reducer\",\"themeReducer\",\"sortReducer\",\"subredditReducer\",\"menuButtonReducer\",\"subredditButtonReducer\",\"subredditDataReducer\",\"arrestedReducer\",\"arrestedButtonReducer\",\"ReactDOM\",\"createRoot\",\"getElementById\",\"render\",\"StrictMode\",\"Provider\",\"store\"],\"mappings\":\"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\",\"sourcesContent\":[\"import { createSlice } from '@reduxjs/toolkit';\\r\\n\\r\\nexport const themeColors = {\\r\\n    light: {\\r\\n        background: '#ECEFF4',\\r\\n        primaryText: '#2E3440',\\r\\n        secondaryText: '#4C566A',\\r\\n        accent: '#D08770',\\r\\n        border: '#D8DEE9'\\r\\n    },\\r\\n    dark: {\\r\\n        background: '#1C1E26',\\r\\n        primaryText: '#ECEFF4',\\r\\n        secondaryText: '#88C0D0',\\r\\n        accent: '#BF616A',\\r\\n        border: '#4C566A'\\r\\n    }\\r\\n}\\r\\n\\r\\nconst themeSlice = createSlice({\\r\\n    name: 'theme',\\r\\n    initialState: { value: 'dark' },\\r\\n    reducers: {\\r\\n        toggleTheme: state => {\\r\\n            state.value = state.value === 'dark' ? 'light' : 'dark';\\r\\n        }\\r\\n    },\\r\\n});\\r\\n\\r\\nexport const { toggleTheme } = themeSlice.actions;\\r\\n\\r\\nexport const selectTheme = state => state.theme.value;\\r\\n\\r\\nexport default themeSlice.reducer;\",\"// themeHooks.js\\r\\n\\r\\nimport { useSelector } from 'react-redux';\\r\\nimport { selectTheme, themeColors } from '../redux/themeSlice';\\r\\n\\r\\nexport const useThemeColors = () => {\\r\\n    const theme = useSelector(selectTheme);\\r\\n    return themeColors[theme];\\r\\n};\\r\\n\\r\\n\\r\\nexport const useThemeObject = (property, color) => {\\r\\n    const theme = useThemeColors();\\r\\n    let styleObject = {};\\r\\n    styleObject[property] = theme[color];\\r\\n    return styleObject;\\r\\n};\\r\\n\\r\\n\",\"import { createSlice } from '@reduxjs/toolkit';\\r\\n\\r\\n\\r\\nconst menuButtonSlice = createSlice({\\r\\n    name: 'menuButton',\\r\\n    initialState: 'closed',\\r\\n    reducers: {\\r\\n        toggleMenuButtonState: (state) => state === 'closed' ? 'open' : 'closed',\\r\\n    },\\r\\n});\\r\\n\\r\\nexport const { toggleMenuButtonState } = menuButtonSlice.actions;\\r\\n\\r\\nexport const selectMenuButtonState = state => state.menu;\\r\\n\\r\\nexport default menuButtonSlice.reducer;\",\"// React module imports.\\r\\nimport React from 'react';\\r\\nimport { useDispatch, useSelector } from 'react-redux';\\r\\nimport { FaMoon, FaSun } from \\\"react-icons/fa\\\";\\r\\n// Local imports.\\r\\nimport { toggleTheme, selectTheme } from '../../../redux/themeSlice';\\r\\n// Style imports.\\r\\nimport './DisplayToggle.css';\\r\\n\\r\\n\\r\\nconst Icon = () => {\\r\\n    const dispatch = useDispatch();\\r\\n    const theme = useSelector(selectTheme);\\r\\n\\r\\n    const toggleThemeMode = () => {\\r\\n        dispatch(toggleTheme());\\r\\n    };\\r\\n\\r\\n    return (\\r\\n        theme === 'dark' ?\\r\\n            <FaMoon color='#D9D9D9' onClick={toggleThemeMode} size={23} />\\r\\n            :\\r\\n            <FaSun color='#F2CA00' onClick={toggleThemeMode} size={23} />\\r\\n    );\\r\\n}\\r\\n\\r\\nconst DisplayToggle = () => {\\r\\n\\r\\n    return (\\r\\n        <div className='theme-icon'>\\r\\n            <Icon />\\r\\n        </div>\\r\\n    );\\r\\n}\\r\\n\\r\\nexport default DisplayToggle;\\r\\n\",\"// React module imports.\\r\\nimport React, { useState } from 'react';\\r\\n// Local imports.\\r\\nimport { useThemeColors } from '../../../hooks/themeHooks';\\r\\n// Style imports.\\r\\nimport './Searchbar.css';\\r\\n\\r\\n\\r\\nconst Searchbar = () => {\\r\\n\\r\\n    const [isFocused, setIsFocused] = useState(false);\\r\\n    const themeColors = useThemeColors();\\r\\n    const secondaryText = themeColors.secondaryText;\\r\\n\\r\\n    const focusStyles = isFocused ? {\\r\\n        boxShadow: `0 0 3px 0 ${secondaryText}`,\\r\\n        borderColor: secondaryText,\\r\\n        outline: 'none',\\r\\n      } : {};\\r\\n\\r\\n    return (\\r\\n        <form>\\r\\n            <input\\r\\n                type=\\\"search\\\"\\r\\n                placeholder='Search...'\\r\\n                style={focusStyles}\\r\\n                onFocus={() => setIsFocused(true)}\\r\\n                onBlur={() => setIsFocused(false)}\\r\\n            />\\r\\n            <button\\r\\n                type=\\\"submit\\\"\\r\\n            >Search</button>\\r\\n        </form>\\r\\n    );\\r\\n}\\r\\n\\r\\nexport default Searchbar;\",\"// React module imports.\\r\\nimport React from \\\"react\\\";\\r\\nimport { useDispatch, useSelector } from 'react-redux';\\r\\nimport { HiMenu } from \\\"react-icons/hi\\\";\\r\\n// Local imports.\\r\\nimport { useThemeColors, useThemeObject } from '../../../hooks/themeHooks';\\r\\nimport { selectMenuButtonState, toggleMenuButtonState } from \\\"../../../redux/menuButtonSlice\\\";\\r\\n// Style imports.\\r\\nimport \\\"./MenuButton.css\\\"\\r\\n\\r\\n\\r\\nconst MenuButton = () => {\\r\\n\\r\\n    // Get theme objects and variables\\r\\n    const themeColors = useThemeColors();\\r\\n    const buttonColor = useThemeObject(\\\"backgroundColor\\\", \\\"primaryText\\\");\\r\\n    const background = themeColors.background;\\r\\n\\r\\n    // Get and manage the current menu state\\r\\n    const menuButtonState = useSelector(selectMenuButtonState);\\r\\n\\r\\n    const dispatch = useDispatch();\\r\\n\\r\\n    const toggleMenuButton = () => {\\r\\n        dispatch(toggleMenuButtonState());\\r\\n    };\\r\\n\\r\\n    // Conditional className\\r\\n    const menuButtonClass = menuButtonState === 'open' ? 'menuIcon rotate' : 'menuIcon';\\r\\n\\r\\n    return (\\r\\n        <div className=\\\"menuButton-container\\\">\\r\\n            <HiMenu\\r\\n                className={menuButtonClass}\\r\\n                style={buttonColor}\\r\\n                color={background}\\r\\n                size=\\\"35\\\"\\r\\n                onClick={toggleMenuButton}\\r\\n            />\\r\\n        </div >\\r\\n    );\\r\\n};\\r\\n\\r\\nexport default MenuButton;\",\"import { createSlice } from '@reduxjs/toolkit';\\r\\n\\r\\n\\r\\nconst sortSlice = createSlice({\\r\\n    name: 'sort',\\r\\n    initialState: 'descending',\\r\\n    reducers: {\\r\\n        setSortOrder: (state, action) => action.payload,\\r\\n    },\\r\\n});\\r\\n\\r\\nexport const { setSortOrder } = sortSlice.actions;\\r\\n\\r\\nexport const selectSort = state => state.sort;\\r\\n\\r\\nexport default sortSlice.reducer;\",\"// React module imports.\\r\\nimport React from \\\"react\\\";\\r\\nimport { FaArrowCircleDown, FaArrowCircleUp } from \\\"react-icons/fa\\\";\\r\\nimport { useDispatch, useSelector } from 'react-redux';\\r\\n// Local imports.\\r\\nimport { useThemeColors } from \\\"../../hooks/themeHooks\\\";\\r\\nimport { setSortOrder, selectSort } from \\\"../../redux/sortSlice\\\";\\r\\n// Style imports.\\r\\nimport './SortButtons.css';\\r\\n\\r\\n\\r\\nconst Sort = () => {\\r\\n\\r\\n    // Get theme objects and variables\\r\\n    const themeColors = useThemeColors();\\r\\n    const accentColor = themeColors.accent;\\r\\n\\r\\n    // Get and manage the current sort order\\r\\n    const sortMethod = useSelector(selectSort);\\r\\n\\r\\n    const dispatch = useDispatch();\\r\\n\\r\\n    const changeSortMethod = (method) => () => {\\r\\n        dispatch(setSortOrder(method));\\r\\n    };\\r\\n\\r\\n    return (\\r\\n        <div className=\\\"arrows\\\">\\r\\n            <FaArrowCircleDown\\r\\n                className={`down-arrow ${sortMethod === 'descending' ? 'selected' : ''}`}\\r\\n                size={40}\\r\\n                color={accentColor}\\r\\n                onClick={changeSortMethod('descending')}\\r\\n            />\\r\\n            <FaArrowCircleUp\\r\\n                className={`up-arrow ${sortMethod === 'ascending' ? 'selected' : ''}`}\\r\\n                size={40}\\r\\n                color={accentColor}\\r\\n                onClick={changeSortMethod('ascending')}\\r\\n            />\\r\\n        </div>\\r\\n    );\\r\\n};\\r\\n\\r\\n\\r\\nexport default Sort;\\r\\n\",\"import { createSlice } from '@reduxjs/toolkit';\\r\\n\\r\\nconst subredditButtonSlice = createSlice({\\r\\n    name: 'subredditButton',\\r\\n    initialState: 'closed',  // assuming the button starts off in the 'off' state\\r\\n    reducers: {\\r\\n        toggleSubredditButtonState: (state) => state === 'closed' ? 'open' : 'closed',\\r\\n    },\\r\\n});\\r\\n\\r\\nexport const { toggleSubredditButtonState } = subredditButtonSlice.actions;\\r\\n\\r\\nexport const selectSubredditButtonState = state => state.subredditButton;\\r\\n\\r\\nexport default subredditButtonSlice.reducer;\\r\\n\",\"// React module imports.\\r\\nimport React from \\\"react\\\";\\r\\nimport { useDispatch } from 'react-redux';\\r\\n// Local imports.\\r\\nimport { useThemeObject, useThemeColors } from \\\"../../hooks/themeHooks\\\";\\r\\nimport { toggleSubredditButtonState } from \\\"../../redux/subredditButtonSlice\\\";\\r\\n// Style imports.\\r\\nimport './SubredditsButton.css';\\r\\n\\r\\n\\r\\nconst SubredditsButton = () => {\\r\\n\\r\\n    // Get theme objects and variables\\r\\n    const buttonStyle = useThemeObject(\\\"backgroundColor\\\", \\\"accent\\\");\\r\\n    const themeColors = useThemeColors();\\r\\n    const buttonText = themeColors.primaryText;\\r\\n\\r\\n    const dispatch = useDispatch();\\r\\n\\r\\n    const toggleSubredditButton = () => {\\r\\n        dispatch(toggleSubredditButtonState());\\r\\n    };\\r\\n\\r\\n    return (\\r\\n        <div className=\\\"subreddits-button-container\\\">\\r\\n            <button\\r\\n                id=\\\"subreddits-button\\\"\\r\\n                type=\\\"button\\\"\\r\\n                style={buttonStyle}\\r\\n                onClick={toggleSubredditButton}\\r\\n            >\\r\\n                <span id=\\\"subreddits-button-label\\\" style={{color: buttonText}}>Subreddits</span>\\r\\n            </ button>\\r\\n        </div>\\r\\n    );\\r\\n};\\r\\n\\r\\nexport default SubredditsButton;\",\"import { createSlice } from '@reduxjs/toolkit';\\r\\n\\r\\nconst subredditSlice = createSlice({\\r\\n    name: 'subreddit',\\r\\n    initialState: 'r/radiohead',\\r\\n    reducers: {\\r\\n        setSubreddit: (state, action) => action.payload,\\r\\n    },\\r\\n});\\r\\n\\r\\nexport const { setSubreddit } = subredditSlice.actions;\\r\\n\\r\\nexport const selectSubreddit = state => state.subreddit;\\r\\n\\r\\nexport default subredditSlice.reducer;\",\"// React module imports.\\r\\nimport React from \\\"react\\\";\\r\\nimport { useDispatch, useSelector } from 'react-redux';\\r\\n// Local imports.\\r\\nimport subredditList from '../../assets/data/subreddits.json';\\r\\nimport { setSubreddit, selectSubreddit } from \\\"../../redux/subredditSlice\\\";\\r\\nimport { useThemeObject } from \\\"../../hooks/themeHooks\\\";\\r\\n// Style imports.\\r\\nimport './SubredditList.css';\\r\\n\\r\\nconst SubredditList = () => {\\r\\n\\r\\n    const secondaryText = useThemeObject(\\\"color\\\", \\\"secondaryText\\\");\\r\\n    const accentColor = useThemeObject(\\\"color\\\", \\\"accent\\\");\\r\\n\\r\\n    // Get and manage the current subreddit\\r\\n    const currentSubreddit = useSelector(selectSubreddit);\\r\\n\\r\\n    const dispatch = useDispatch();\\r\\n    const changeSubreddit = (subreddit) => () => {\\r\\n        dispatch(setSubreddit(subreddit));\\r\\n    };\\r\\n\\r\\n    return (\\r\\n        <div>\\r\\n            <ul id=\\\"sr-list\\\" style={secondaryText}>\\r\\n                {\\r\\n                    subredditList.map((subreddit, i) => {\\r\\n                        // Create a style object for the subreddit button\\r\\n                        const buttonStyle = currentSubreddit === subreddit\\r\\n                            ? { ...secondaryText, textDecoration: 'underline', fontWeight: 'bold', color: accentColor.color } // active style\\r\\n                            : secondaryText; // default style\\r\\n\\r\\n                        return (\\r\\n                            <li id=\\\"sr-name\\\" key={i}>\\r\\n                                <button\\r\\n                                    id=\\\"sr-button\\\"\\r\\n                                    type=\\\"button\\\"\\r\\n                                    style={buttonStyle}\\r\\n                                    onClick={changeSubreddit(subreddit)}\\r\\n                                >\\r\\n                                    {subreddit}\\r\\n                                </button>\\r\\n                            </li>\\r\\n                        );\\r\\n                    })\\r\\n                }\\r\\n            </ul>\\r\\n        </div>\\r\\n    );\\r\\n};\\r\\n\\r\\nexport default SubredditList;\",\"import { createSlice } from '@reduxjs/toolkit';\\r\\n\\r\\nconst arrestedButtonSlice = createSlice({\\r\\n    name: 'arrestedButton',\\r\\n    initialState: 'closed',  // assuming the button starts off in the 'off' state\\r\\n    reducers: {\\r\\n        toggleArrestedButtonState: (state) => state === 'closed' ? 'open' : 'closed',\\r\\n    },\\r\\n});\\r\\n\\r\\nexport const { toggleArrestedButtonState } = arrestedButtonSlice.actions;\\r\\n\\r\\nexport const selectArrestedButtonState = state => state.arrestedButton;\\r\\n\\r\\nexport default arrestedButtonSlice.reducer;\\r\\n\",\"// React module imports.\\r\\nimport React from \\\"react\\\";\\r\\nimport { useDispatch } from 'react-redux';\\r\\n// Local imports.\\r\\nimport { useThemeObject, useThemeColors } from \\\"../../hooks/themeHooks\\\";\\r\\nimport { toggleArrestedButtonState } from \\\"../../redux/arrestedButtonSlice\\\";\\r\\n// Style imports.\\r\\nimport './ArrestedButton.css';\\r\\n\\r\\n\\r\\nconst ArrestedButton = () => {\\r\\n\\r\\n    // Get theme objects and variables\\r\\n    const buttonStyle = useThemeObject(\\\"backgroundColor\\\", \\\"accent\\\");\\r\\n    const themeColors = useThemeColors();\\r\\n    const buttonText = themeColors.primaryText;\\r\\n\\r\\n    const dispatch = useDispatch();\\r\\n\\r\\n    const toggleArrestedButton = () => {\\r\\n        dispatch(toggleArrestedButtonState());\\r\\n    };\\r\\n\\r\\n    return (\\r\\n        <div className=\\\"arrested-button-container\\\">\\r\\n            <button\\r\\n                id=\\\"arrested-button\\\"\\r\\n                type=\\\"button\\\"\\r\\n                style={buttonStyle}\\r\\n                onClick={toggleArrestedButton}\\r\\n            >\\r\\n                <span id=\\\"arrested-button-label\\\" style={{color: buttonText}}>Arrested</span>\\r\\n            </ button>\\r\\n        </div>\\r\\n    );\\r\\n};\\r\\n\\r\\nexport default ArrestedButton;\",\"import { createSlice } from '@reduxjs/toolkit';\\r\\n\\r\\nconst arrestedSlice = createSlice({\\r\\n    name: 'arrested',\\r\\n    initialState: [],\\r\\n    reducers: {\\r\\n        addArrestedUser: (state, action) => {\\r\\n            // Add a specified user tp the array.\\r\\n            state.push(action.payload);\\r\\n        },\\r\\n        removeArrestedUser: (state, action) => {\\r\\n            // Return a new state array that doesn't include the user specified in the payload\\r\\n            return state.filter(user => user !== action.payload);\\r\\n        },\\r\\n        removeAllArrestedUsers: () => {\\r\\n            // Reset state to its initial value\\r\\n            return [];\\r\\n        },\\r\\n    },\\r\\n});\\r\\n\\r\\nexport const { addArrestedUser, removeArrestedUser, removeAllArrestedUsers } = arrestedSlice.actions;\\r\\n\\r\\nexport const selectArrestedUsers = state => state.arrested;\\r\\n\\r\\nexport default arrestedSlice.reducer;\\r\\n\",\"// React module imports.\\r\\nimport React from 'react';\\r\\nimport { useSelector, useDispatch } from 'react-redux';\\r\\n// Local imports.\\r\\nimport { removeArrestedUser, selectArrestedUsers, removeAllArrestedUsers } from '../../redux/arrestedSlice';\\r\\nimport { useThemeObject } from '../../hooks/themeHooks';\\r\\n// Style imports.\\r\\nimport './ArrestsList.css';\\r\\n\\r\\nconst ArrestsList = () => {\\r\\n\\r\\n    const primaryText = useThemeObject(\\\"color\\\", \\\"primaryText\\\")\\r\\n    const secondaryText = useThemeObject(\\\"color\\\", \\\"secondaryText\\\");\\r\\n    const buttonStyle = useThemeObject(\\\"backgroundColor\\\", \\\"accent\\\");\\r\\n    const buttonText = useThemeObject(\\\"color\\\", \\\"primaryText\\\");\\r\\n    const arrestedUsers = useSelector(selectArrestedUsers);\\r\\n    const emptyMessage = arrestedUsers.length === 0 ? \\\"No Users Currently Arrested\\\" : \\\"Tap Username to Release\\\";\\r\\n\\r\\n    // Use the useDispatch hook to get the dispatch function\\r\\n    const dispatch = useDispatch();\\r\\n\\r\\n\\r\\n    const handleRemoveUser = (user) => {\\r\\n        dispatch(removeArrestedUser(user));\\r\\n    }\\r\\n\\r\\n    const handleRemoveAllUsers = () => {\\r\\n        dispatch(removeAllArrestedUsers());\\r\\n    }\\r\\n\\r\\n    return (\\r\\n        <div className='arrests-list-container'>\\r\\n            <p className='empty-message' style={primaryText}>{emptyMessage}</p>\\r\\n            <ul id=\\\"arrests-list\\\" style={secondaryText}>\\r\\n                {\\r\\n                    arrestedUsers.map((user, i) => (\\r\\n                        <div className='arrested-user-container'>\\r\\n                            <li id=\\\"arrested-name\\\" key={i} onClick={() => handleRemoveUser(user)}>{user}</li>\\r\\n                        </div>\\r\\n                    ))\\r\\n                }\\r\\n            </ul>\\r\\n            {\\r\\n                arrestedUsers.length > 1 ?\\r\\n                    <button\\r\\n                        id=\\\"release-all\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                        style={buttonStyle}\\r\\n                        onClick={handleRemoveAllUsers}\\r\\n                    >\\r\\n                        <span id=\\\"release-all-button-label\\\" style={buttonText}>Release All Users</span>\\r\\n                    </ button>\\r\\n                    : <></>}\\r\\n        </div>\\r\\n    );\\r\\n};\\r\\n\\r\\nexport default ArrestsList;\\r\\n\",\"// React module imports.\\r\\nimport React, { useEffect } from \\\"react\\\";\\r\\nimport { useSelector, useDispatch } from 'react-redux';\\r\\n// Local imports.\\r\\nimport { useThemeObject } from '../../hooks/themeHooks';\\r\\nimport DisplayToggle from './DisplayToggle/DisplayToggle';\\r\\nimport Searchbar from './Searchbar/Searchbar';\\r\\nimport MenuButton from \\\"./MenuButton/MenuButton\\\";\\r\\nimport Sort from \\\"../../elements/SortButtons/SortButtons\\\";\\r\\nimport SubredditsButton from \\\"../../elements/SubredditsButton/SubredditsButton\\\";\\r\\nimport SubredditList from \\\"../../elements/SubredditList/SubredditList\\\";\\r\\nimport { selectMenuButtonState } from \\\"../../redux/menuButtonSlice\\\";\\r\\nimport { selectSubredditButtonState, toggleSubredditButtonState } from \\\"../../redux/subredditButtonSlice\\\";\\r\\nimport ArrestedButton from \\\"../../elements/ArrestedButton/ArrestedButton\\\";\\r\\nimport ArrestsList from \\\"../../elements/ArrestsList/ArrestsList\\\";\\r\\nimport { selectArrestedButtonState, toggleArrestedButtonState } from \\\"../../redux/arrestedButtonSlice\\\";\\r\\n// Style imports.\\r\\nimport './Header.css';\\r\\n\\r\\n\\r\\nconst Header = () => {\\r\\n\\r\\n    const background = useThemeObject(\\\"backgroundColor\\\", \\\"background\\\");\\r\\n    const accentColor = useThemeObject(\\\"color\\\", \\\"accent\\\");\\r\\n    const borderColor = useThemeObject(\\\"color\\\", \\\"secondaryText\\\");\\r\\n    const menuBackground = useThemeObject(\\\"backgroundColor\\\", \\\"background\\\");\\r\\n\\r\\n    // Get and manage the current menu, subreddit and arrested button states\\r\\n    const menuButtonState = useSelector(selectMenuButtonState);\\r\\n    const subredditButtonState = useSelector(selectSubredditButtonState);\\r\\n    const arrestedButtonState = useSelector(selectArrestedButtonState);\\r\\n\\r\\n    const dispatch = useDispatch();\\r\\n\\r\\n    // Toggle arrested button action dispatch\\r\\n    const toggleArrestedButton = () => {\\r\\n        dispatch(toggleArrestedButtonState());\\r\\n    };\\r\\n\\r\\n    // Toggle subreddit button action dispatch\\r\\n    const toggleSubredditButton = () => {\\r\\n        dispatch(toggleSubredditButtonState());\\r\\n    };\\r\\n\\r\\n    // Conditional className - Menu\\r\\n    let menuContainerClass = '';\\r\\n    if (menuButtonState === 'open') {\\r\\n        menuContainerClass = 'menu-container mobile open';\\r\\n    } else {\\r\\n        menuContainerClass = 'menu-container mobile closed';\\r\\n    }\\r\\n\\r\\n    // Conditional className - Subreddit List\\r\\n    let srListContainerClass = '';\\r\\n    if (subredditButtonState === 'open' && menuButtonState === 'open') {\\r\\n        srListContainerClass = 'sr-list-container mobile open';\\r\\n    } else {\\r\\n        srListContainerClass = 'sr-list-container mobile closed';\\r\\n    }\\r\\n\\r\\n    // Conditional className - Arrested List\\r\\n    let arrestedListContainerClass = '';\\r\\n    if (arrestedButtonState === 'open' && menuButtonState === 'open') {\\r\\n        arrestedListContainerClass = 'arrested-list-container mobile open';\\r\\n    } else {\\r\\n        arrestedListContainerClass = 'arrested-list-container mobile closed';\\r\\n    }\\r\\n\\r\\n    useEffect(() => {\\r\\n        if (subredditButtonState === \\\"open\\\" && arrestedButtonState === \\\"open\\\") {\\r\\n            toggleSubredditButton();\\r\\n        }\\r\\n    }, [arrestedButtonState]);\\r\\n\\r\\n    useEffect(() => {\\r\\n        if (subredditButtonState === \\\"open\\\" && arrestedButtonState === \\\"open\\\") {\\r\\n            toggleArrestedButton();\\r\\n        }\\r\\n    }, [subredditButtonState]);\\r\\n\\r\\n    return (\\r\\n        <div className=\\\"header-container\\\" style={background}>\\r\\n            <div className=\\\"header\\\" style={background}>\\r\\n                <h1 className=\\\"logo\\\">\\r\\n                    <span className=\\\"karma\\\" style={accentColor}>KARMA</span>\\r\\n                    <span className=\\\"police\\\" style={borderColor}>POLICE</span>\\r\\n                </h1>\\r\\n                <div className=\\\"rightSide desktop\\\">\\r\\n                    <DisplayToggle />\\r\\n                    <Searchbar />\\r\\n                </div>\\r\\n                <div className=\\\"menuButton mobile\\\">\\r\\n                    <MenuButton />\\r\\n                </div>\\r\\n            </div>\\r\\n            <div className={menuContainerClass}>\\r\\n                <div className=\\\"menu-block\\\" id=\\\"block-1\\\" style={menuBackground}>\\r\\n                    <DisplayToggle />\\r\\n                    <Searchbar />\\r\\n                </div>\\r\\n                <div className=\\\"menu-block\\\" id=\\\"block-2\\\" style={menuBackground}>\\r\\n                    <SubredditsButton />\\r\\n                    <ArrestedButton />\\r\\n                    <Sort />\\r\\n                </div>\\r\\n                <div className={srListContainerClass}>\\r\\n                    <div className=\\\"list-block\\\" id=\\\"block-3\\\" style={menuBackground}>\\r\\n                        <SubredditList />\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div className={arrestedListContainerClass}>\\r\\n                    <div className=\\\"list-block\\\" id=\\\"block-4\\\" style={menuBackground}>\\r\\n                        <ArrestsList />\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    );\\r\\n}\\r\\n\\r\\nexport default Header;\\r\\n\",\"// React module imports. \\r\\nimport React from \\\"react\\\";\\r\\n// Local imports.\\r\\nimport SortButtons from \\\"../../../elements/SortButtons/SortButtons\\\"\\r\\nimport { useThemeObject } from \\\"../../../hooks/themeHooks\\\";\\r\\n// Style imports. \\r\\nimport './Sort.css';\\r\\n\\r\\n\\r\\nconst Sort = () => {\\r\\n\\r\\n    // Get theme objects and variables\\r\\n    const background = useThemeObject(\\\"backgroundColor\\\", \\\"border\\\");\\r\\n    const primaryText = useThemeObject(\\\"color\\\", \\\"primaryText\\\");\\r\\n\\r\\n    return (\\r\\n        <div className=\\\"sort\\\" style={background}>\\r\\n            <p id=\\\"sort-label\\\" style={primaryText}>Sort by Karma</p>\\r\\n            <SortButtons />\\r\\n        </div>\\r\\n    );\\r\\n};\\r\\n\\r\\nexport default Sort;\",\"// React module imports.\\r\\nimport React from \\\"react\\\";\\r\\n// Local imports.\\r\\nimport { useThemeObject } from \\\"../../hooks/themeHooks\\\";\\r\\nimport SubredditList from \\\"../../elements/SubredditList/SubredditList\\\";\\r\\nimport Sort from \\\"../Header/Sort/Sort\\\";\\r\\nimport ArrestsList from \\\"../../elements/ArrestsList/ArrestsList\\\";\\r\\n// Style imports.\\r\\nimport './Sidebar.css';\\r\\n\\r\\n\\r\\nconst SubredditMenu = () => {\\r\\n\\r\\n    // Get theme objects and variables\\r\\n    const background = useThemeObject(\\\"backgroundColor\\\", \\\"border\\\");\\r\\n    const primaryText = useThemeObject(\\\"color\\\", \\\"primaryText\\\");\\r\\n\\r\\n    return (\\r\\n        <div className=\\\"Sidebar\\\">\\r\\n            <div className=\\\"sidebar-sort\\\" style={background}>\\r\\n                <Sort />\\r\\n            </div>\\r\\n            <div className=\\\"sidebar-sr-list\\\" style={background}>\\r\\n                <p className=\\\"sidebar-sr-label\\\" style={primaryText}>Subreddit</p>\\r\\n                <SubredditList />\\r\\n            </div>\\r\\n            <div className=\\\"sidebar-arrests-list\\\" style={background}>\\r\\n            <p className=\\\"sidebar-arrests-label\\\" style={primaryText}>Arrested Users</p> \\r\\n                <ArrestsList />\\r\\n            </div>\\r\\n        </div>\\r\\n    );\\r\\n};\\r\\n\\r\\nexport default SubredditMenu;\\r\\n\",\"// React module imports.\\r\\nimport React from \\\"react\\\";\\r\\nimport { FaUserCircle } from \\\"react-icons/fa\\\";\\r\\n// Local imports.\\r\\nimport { useThemeColors } from \\\"../../../../hooks/themeHooks\\\";\\r\\n// Style imports.\\r\\nimport \\\"./UserInfo.css\\\";\\r\\n\\r\\n\\r\\nconst UserInfo = ({ post }) => {\\r\\n\\r\\n    const {\\r\\n        userData: {\\r\\n            pfp,\\r\\n            username\\r\\n        }\\r\\n    } = post;\\r\\n\\r\\n    // Get theme colors. \\r\\n    const themeColors = useThemeColors();\\r\\n    const accentColor = themeColors.accent;\\r\\n\\r\\n\\r\\n    const imageUrl = pfp;\\r\\n    const shortUrl = imageUrl && imageUrl.split(\\\"?\\\")[0];\\r\\n    const imageSize = '40px';\\r\\n    const iconSize = \\\"40\\\";\\r\\n\\r\\n\\r\\n    return (\\r\\n        <div className=\\\"user\\\">\\r\\n            {imageUrl ? (\\r\\n                <img\\r\\n                    className=\\\"user-pfp\\\"\\r\\n                    src={shortUrl}\\r\\n                    alt=\\\"Post Author PfP\\\"\\r\\n                    width={imageSize}\\r\\n                    height={imageSize}>\\r\\n                </img>\\r\\n            ) : (\\r\\n                <FaUserCircle color={accentColor} size={iconSize} />\\r\\n            )}\\r\\n            <p className=\\\"username\\\">{username}</p>\\r\\n        </div>\\r\\n    );\\r\\n};\\r\\n\\r\\nexport default UserInfo;\",\"// React module imports.\\r\\nimport React, { useState } from \\\"react\\\";\\r\\nimport { FaArrowAltCircleLeft, FaArrowAltCircleRight } from \\\"react-icons/fa\\\";\\r\\n// Local imports.\\r\\nimport { useThemeColors } from \\\"../../../../../../hooks/themeHooks\\\";\\r\\n// Style imports. \\r\\nimport './GalleryViewer.css';\\r\\n\\r\\nconst GalleryViewer = ({ images }) => {\\r\\n\\r\\n    const iconSize = \\\"60\\\";\\r\\n\\r\\n    // Get theme variables.\\r\\n    const themeColors = useThemeColors();\\r\\n    const buttonColor = themeColors.accent;\\r\\n\\r\\n    // Create and manage gallery index state.\\r\\n    const [currentIndex, setCurrentIndex] = useState(0);\\r\\n\\r\\n    const handlePrevious = () => {\\r\\n        setCurrentIndex((prevIndex) => prevIndex - 1);\\r\\n    };\\r\\n\\r\\n    const handleNext = () => {\\r\\n        setCurrentIndex((prevIndex) => prevIndex + 1);\\r\\n    };\\r\\n\\r\\n    const currentImage = images[currentIndex];\\r\\n\\r\\n    return (\\r\\n        <div className=\\\"gallery-viewer\\\">\\r\\n            {currentIndex > 0 ? (\\r\\n                <FaArrowAltCircleLeft\\r\\n                    className=\\\"gallery-viewer-button\\\"\\r\\n                    size={iconSize}\\r\\n                    color={buttonColor}\\r\\n                    onClick={handlePrevious} />\\r\\n            ) : <></>}\\r\\n\\r\\n            <img src={currentImage} alt=\\\"Gallery img\\\" />\\r\\n\\r\\n            {currentIndex < images.length - 1 ? (\\r\\n                <FaArrowAltCircleRight\\r\\n                    className=\\\"gallery-viewer-button\\\"\\r\\n                    size={iconSize}\\r\\n                    color={buttonColor}\\r\\n                    onClick={handleNext} />\\r\\n            ) : <></>}\\r\\n        </div>\\r\\n    );\\r\\n};\\r\\n\\r\\nexport default GalleryViewer;\\r\\n\",\"// React module imports. \\r\\nimport React from \\\"react\\\";\\r\\nimport he from 'he';\\r\\nimport styled from 'styled-components';\\r\\n// Local imports.\\r\\nimport GalleryViewer from \\\"./GalleryViewer/GalleryViewer\\\";\\r\\nimport { useThemeColors } from \\\"../../../../../hooks/themeHooks\\\";\\r\\n// Style imports.\\r\\nimport './PostMedia.css';\\r\\n\\r\\n// Create a styled component that will apply the theme colors.\\r\\nconst StyledLink = styled.a`\\r\\n    color: ${props => props.themeColor};\\r\\n\\r\\n    &:link {\\r\\n    color: ${props => props.themeColor};\\r\\n    }\\r\\n\\r\\n    &:visited {\\r\\n    color: ${props => props.themeColor};\\r\\n    }`;\\r\\n\\r\\nconst PostMedia = ({ post }) => {\\r\\n\\r\\n    const {\\r\\n        galleryData,\\r\\n        mediaMetaData,\\r\\n        crossposts,\\r\\n        media,\\r\\n        postHint,\\r\\n        isVideo,\\r\\n        urlOverridden,\\r\\n        url,\\r\\n        postTitle\\r\\n    } = post;\\r\\n\\r\\n    // Decode urls.\\r\\n    const decodedUrl = he.decode(url);\\r\\n    const decodedUrlOverridden = he.decode(url);\\r\\n\\r\\n    // Get theme colors.\\r\\n    const themeColors = useThemeColors();\\r\\n    const accentColor = themeColors.accent;\\r\\n\\r\\n\\r\\n    // Extract decoded URLs from galleryData\\r\\n    let galleryImages = [];\\r\\n    if (galleryData) {\\r\\n        galleryImages = galleryData.items.map((item) => {\\r\\n            const galleryImageUrl = mediaMetaData && mediaMetaData[item.media_id].s.u;\\r\\n            // Remove escaped & character encodings from URL.\\r\\n            return galleryImageUrl && he.decode(galleryImageUrl);\\r\\n        });\\r\\n    }\\r\\n\\r\\n    let crosspostGalleryImages = [];\\r\\n    if (crossposts && crossposts[0].gallery_data) {\\r\\n        crosspostGalleryImages = crossposts[0].gallery_data.items.map((item) => {\\r\\n            const galleryImageUrl = crossposts[0].media_metadata && crossposts[0].media_metadata[item.media_id].s.u;\\r\\n            // Remove escaped & character encodings from URL.\\r\\n            return galleryImageUrl && he.decode(galleryImageUrl);\\r\\n        });\\r\\n    }\\r\\n\\r\\n    const renderMedia = () => {\\r\\n        if (media && media.type === \\\"youtube.com\\\") {\\r\\n            return renderYoutubeVideo();\\r\\n        } else if (media && media.reddit_video) {\\r\\n            return renderRedditVideo();\\r\\n        } else if (crossposts) {\\r\\n            if (crossposts[0].media && crossposts[0].media.reddit_video) {\\r\\n                return renderCrosspostRedditVideo();\\r\\n            } else if (crossposts[0].gallery_data) {\\r\\n                return renderCrosspostImageGallery();\\r\\n            } else if (postHint === \\\"image\\\" && !crossposts[0].is_video && !crossposts[0].media) {\\r\\n                return renderImage();\\r\\n            } else if (crossposts[0].removed_by_category === \\\"deleted\\\") {\\r\\n                return <p className=\\\"error-message\\\">This post has been deleted.</p>\\r\\n            } else {\\r\\n                console.log(\\\"Crosspost Error - Media Type Not Recognised\\\");\\r\\n                console.log(post);\\r\\n                return;\\r\\n            }\\r\\n        } else if (postHint === \\\"image\\\" && !isVideo && !media) {\\r\\n            return renderImage();\\r\\n        } else if (galleryData) {\\r\\n            return renderImageGallery();\\r\\n        } else if (postHint === \\\"link\\\") {\\r\\n            return renderUrl();\\r\\n        } else if (urlOverridden) {\\r\\n            return renderUrlOverridden();\\r\\n        } else {\\r\\n            return <></>;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    const renderYoutubeVideo = () => {\\r\\n        const videoUrl = media.oembed.html.match(/src=[\\\"'](.*?)[\\\"']/)[1];\\r\\n        const videoTitle = he.decode(media.oembed.title);\\r\\n        return (\\r\\n            <div className=\\\"youtube-video-container\\\">\\r\\n                <iframe\\r\\n                    className=\\\"video\\\"\\r\\n                    title={videoTitle}\\r\\n                    src={videoUrl}\\r\\n                    allowFullScreen>\\r\\n                </iframe>\\r\\n            </div>\\r\\n        );\\r\\n    }\\r\\n\\r\\n    const renderRedditVideo = () => {\\r\\n        const decodedUrl = he.decode(media.reddit_video.fallback_url);\\r\\n        return (\\r\\n            <div className=\\\"reddit-video-container\\\">\\r\\n                <iframe\\r\\n                    className=\\\"video\\\"\\r\\n                    title={postTitle}\\r\\n                    width={media.reddit_video.width}\\r\\n                    height={media.reddit_video.height}\\r\\n                    src={decodedUrl}>\\r\\n                </iframe>\\r\\n            </div>\\r\\n        );\\r\\n    }\\r\\n\\r\\n    const renderCrosspostRedditVideo = () => {\\r\\n        const decodedUrl = he.decode(crossposts[0].media.reddit_video.fallback_url);\\r\\n        return (\\r\\n            <div className=\\\"reddit-video-container\\\">\\r\\n                <iframe\\r\\n                    className=\\\"video\\\"\\r\\n                    title={postTitle}\\r\\n                    width={crossposts[0].media.reddit_video.width}\\r\\n                    height={crossposts[0].media.reddit_video.height}\\r\\n                    src={decodedUrl}>\\r\\n                </iframe>\\r\\n            </div>\\r\\n        );\\r\\n    }\\r\\n\\r\\n    const renderImage = () => {\\r\\n        return (\\r\\n            <div className=\\\"image-container\\\">\\r\\n                <img className=\\\"post-image\\\" src={decodedUrl} alt=\\\"\\\" />\\r\\n            </div>\\r\\n        );\\r\\n    }\\r\\n\\r\\n    const renderImageGallery = () => {\\r\\n        return (\\r\\n            <div className=\\\"image-container\\\">\\r\\n                {galleryImages.length > 0 && <GalleryViewer images={galleryImages} />}\\r\\n            </div>\\r\\n        );\\r\\n    }\\r\\n\\r\\n    const renderCrosspostImageGallery = () => {\\r\\n        return (\\r\\n            <div className=\\\"image-container\\\">\\r\\n                {crosspostGalleryImages.length > 0 && <GalleryViewer images={crosspostGalleryImages} />}\\r\\n            </div>\\r\\n        );\\r\\n    }\\r\\n\\r\\n    const renderUrl = () => {\\r\\n        return (\\r\\n            <div className=\\\"link-container\\\">\\r\\n                <StyledLink href={decodedUrl} target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" themeColor={accentColor}>\\r\\n                    {decodedUrl}\\r\\n                </StyledLink>\\r\\n            </div>\\r\\n        )\\r\\n    }\\r\\n\\r\\n    const renderUrlOverridden = () => {\\r\\n        return (\\r\\n            <div className=\\\"link-container\\\">\\r\\n                <StyledLink href={decodedUrlOverridden} target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" themeColor={accentColor}>\\r\\n                    {decodedUrlOverridden}\\r\\n                </StyledLink>\\r\\n            </div>\\r\\n        )\\r\\n    }\\r\\n\\r\\n    return (\\r\\n        <div>\\r\\n            {renderMedia()}\\r\\n        </div>\\r\\n    );\\r\\n};\\r\\n\\r\\nexport default PostMedia;\",\"// React module imports.\\r\\nimport React, { useEffect, useRef } from \\\"react\\\";\\r\\nimport styled from 'styled-components';\\r\\nimport he from 'he';\\r\\nimport DOMPurify from 'dompurify';\\r\\n// Local imports.\\r\\nimport { useThemeColors } from \\\"../../../../../hooks/themeHooks\\\";\\r\\n// Style imports. \\r\\nimport './PostText.css';\\r\\n\\r\\n// Create styled component for post text. \\r\\n// Workaround for styling child html entities whilst using dangerouslySetInnerHtml\\r\\nconst PostTextContainer = styled.div`\\r\\n    a {\\r\\n        color: ${props => props.linkColor};\\r\\n        word-wrap: break-word;\\r\\n        overflow-wrap: break-word;\\r\\n    }\\r\\n\\r\\n    h1, h2, h3, h4, h5, h6 {\\r\\n        padding-top: 20px;\\r\\n        color: ${props => props.headingColor};\\r\\n    }\\r\\n\\r\\n    p {\\r\\n        color: ${props => props.textColor};\\r\\n        margin-left: 0px;\\r\\n    }\\r\\n\\r\\n    table {\\r\\n        width: 40%;\\r\\n    }\\r\\n\\r\\n    th {\\r\\n        color: ${props => props.headingColor};\\r\\n    }\\r\\n\\r\\n    tr {\\r\\n        color: ${props => props.textColor};\\r\\n    }\\r\\n    `;\\r\\n\\r\\nconst PostText = ({ post }) => {\\r\\n\\r\\n    // Destuctured values from post prop.\\r\\n    const {\\r\\n        postText,\\r\\n        crossposts\\r\\n    } = post;\\r\\n\\r\\n    // Vars for text rendering.\\r\\n    let decodedText = \\\"\\\";\\r\\n    let sanitisedHTML = \\\"\\\";\\r\\n\\r\\n    if (crossposts) {\\r\\n        // Decode and sanitise html entities from crosspost text.\\r\\n        decodedText = crossposts[0].selftext_html && he.decode(crossposts[0].selftext_html);\\r\\n        sanitisedHTML = DOMPurify.sanitize(decodedText);\\r\\n    } else {\\r\\n        // Decode and sanitise html entities from post text.\\r\\n        decodedText = postText && he.decode(postText);\\r\\n        sanitisedHTML = DOMPurify.sanitize(decodedText);\\r\\n    }\\r\\n\\r\\n    // Create a reference to the post text container. \\r\\n    const postTextRef = useRef(null);\\r\\n    const host = window.location.origin;\\r\\n    const reddit = 'https://www.reddit.com/';\\r\\n\\r\\n    useEffect(() => {\\r\\n        if (postTextRef.current) {\\r\\n            const links = postTextRef.current.getElementsByTagName('a');\\r\\n            for (let i = 0; i < links.length; i++) {\\r\\n                if (links[i].href.startsWith(host)) {\\r\\n                    links[i].href = links[i].href.replace(host, reddit);\\r\\n                }\\r\\n                links[i].target = '_blank';\\r\\n                links[i].rel = 'noopener noreferrer';\\r\\n            }\\r\\n        }\\r\\n    }, [decodedText]);\\r\\n\\r\\n\\r\\n\\r\\n    // Get theme color variables. \\r\\n    const themeColors = useThemeColors();\\r\\n\\r\\n    const linkColor = themeColors.accent;\\r\\n    const textColor = themeColors.secondaryText;\\r\\n    const headingColor = themeColors.primaryText;\\r\\n\\r\\n    return (\\r\\n        <PostTextContainer\\r\\n            className=\\\"post-text\\\"\\r\\n            dangerouslySetInnerHTML={{ __html: sanitisedHTML }}\\r\\n            linkColor={linkColor}\\r\\n            textColor={textColor}\\r\\n            headingColor={headingColor}\\r\\n            ref={postTextRef}\\r\\n        />\\r\\n    );\\r\\n};\\r\\n\\r\\nexport default PostText;\\r\\n\",\"// React module imports.\\r\\nimport React from \\\"react\\\";\\r\\nimport he from 'he';\\r\\n// Local imports.\\r\\nimport PostMedia from \\\"./PostMedia/PostMedia\\\";\\r\\nimport PostText from \\\"./PostText/PostText\\\";\\r\\nimport { useThemeObject } from \\\"../../../../hooks/themeHooks\\\";\\r\\n// Style imports. \\r\\nimport \\\"./CardContent.css\\\";\\r\\n\\r\\nconst CardContent = ({ post }) => {\\r\\n    // Destructured values from object.\\r\\n    const {\\r\\n        postTitle,\\r\\n        pollData,\\r\\n    } = post;\\r\\n\\r\\n    // Get style variables. \\r\\n    const borderColor = useThemeObject(\\\"backgroundColor\\\", \\\"border\\\");\\r\\n\\r\\n    // Decode html entities from post title. \\r\\n    const decodedTitle = postTitle && he.decode(postTitle);\\r\\n\\r\\n    const renderPoll = () => {\\r\\n        if (pollData) {\\r\\n            return (\\r\\n                <div className=\\\"poll-container\\\">\\r\\n                    <p>Reddit Poll - Not currently voteable, click \\\"View Poll\\\" to vote on Reddit.com</p>\\r\\n                    <ul>\\r\\n                        {pollData.options.map((option) => (\\r\\n                            <li key={option.id}>{option.text}</li>\\r\\n                        ))}\\r\\n                    </ul>\\r\\n                </div>\\r\\n            );\\r\\n        }\\r\\n    }\\r\\n\\r\\n    return (\\r\\n        <div className=\\\"card-content\\\" style={borderColor}>\\r\\n            <p className=\\\"post-title\\\">{decodedTitle}</p>\\r\\n            <PostMedia\\r\\n                post={post}\\r\\n            />\\r\\n            { renderPoll() }\\r\\n            <PostText post={post} />\\r\\n        </div>\\r\\n    );\\r\\n};\\r\\n\\r\\nexport default CardContent;\\r\\n\",\"// React module imports.\\r\\nimport React from \\\"react\\\";\\r\\nimport { FaYinYang, FaRegClock, FaRegComment } from \\\"react-icons/fa\\\";\\r\\n// Local imports.\\r\\nimport { useThemeColors } from \\\"../../../../hooks/themeHooks\\\";\\r\\n// Style imports.\\r\\nimport \\\"./PostInfo.css\\\";\\r\\n\\r\\n\\r\\nconst PostInfo = ({ post }) => {\\r\\n\\r\\n    const {\\r\\n        created,\\r\\n        comments,\\r\\n        userData: { karma }\\r\\n    } = post;\\r\\n\\r\\n    // Get theme colors. \\r\\n    const themeColors = useThemeColors();\\r\\n    const accentColor = themeColors.accent;\\r\\n\\r\\n    const iconSize = 20;\\r\\n\\r\\n    // Calculate time data. \\r\\n    let timeStamp = new Date(created * 1000);\\r\\n    let currentTime = Date.now();\\r\\n    let unit = \\\"\\\";\\r\\n    let value = 0;\\r\\n    const seconds = (currentTime - timeStamp) / 1000;\\r\\n    const minutes = Math.round(seconds / 60);\\r\\n    const hours = Math.round(minutes / 60);\\r\\n    const days = Math.floor(hours / 24);\\r\\n\\r\\n    // Determine unit to be displayed.\\r\\n    if (days > 0) {\\r\\n        unit = \\\"Day\\\";\\r\\n        value = days;\\r\\n    } if (days === 0) {\\r\\n        unit = \\\"Hour\\\";\\r\\n        value = hours;\\r\\n    } if (hours === 0) {\\r\\n        unit = \\\"Minute\\\";\\r\\n        value = minutes;\\r\\n    } if (minutes === 0) {\\r\\n        unit = \\\"Second\\\";\\r\\n        value = seconds;\\r\\n    }\\r\\n\\r\\n    // Pluralise if necessary.\\r\\n    if (value > 1) {\\r\\n        unit += 's';\\r\\n    }\\r\\n\\r\\n    return (\\r\\n        <div className=\\\"post-info\\\">\\r\\n            <div className=\\\"karma-score\\\">\\r\\n                <FaYinYang color={accentColor} size={iconSize} />\\r\\n                <span>{karma}</span>\\r\\n            </div>\\r\\n            <div className=\\\"post-age\\\">\\r\\n                <FaRegClock color={accentColor} size={iconSize} />\\r\\n                <span>{value} {unit}</span>\\r\\n            </div>\\r\\n            <div className=\\\"post-comments\\\">\\r\\n                <FaRegComment color={accentColor} size={iconSize} />\\r\\n                <span>{comments}</span>\\r\\n            </div>\\r\\n        </div>\\r\\n    );\\r\\n};\\r\\n\\r\\nexport default PostInfo;\",\"// React module imports.\\r\\nimport React from \\\"react\\\";\\r\\nimport { useDispatch } from 'react-redux';\\r\\nimport { GiHandcuffs } from \\\"react-icons/gi\\\";\\r\\n// Local imports.\\r\\nimport { addArrestedUser } from \\\"../../../../redux/arrestedSlice\\\";\\r\\nimport { useThemeColors } from \\\"../../../../hooks/themeHooks\\\";\\r\\n// Style imports.\\r\\nimport \\\"./ArrestAction.css\\\";\\r\\n\\r\\nconst ArrestAction = ({ post }) => {\\r\\n    const {\\r\\n        userData: { username }\\r\\n    } = post;\\r\\n\\r\\n    const dispatch = useDispatch();\\r\\n\\r\\n    const themeColors = useThemeColors();\\r\\n    const accentColor = themeColors.accent;\\r\\n\\r\\n    const handleArrest = () => { \\r\\n        dispatch(addArrestedUser(username));\\r\\n    }\\r\\n\\r\\n    const iconSize = \\\"40\\\";\\r\\n    return (\\r\\n        <div className=\\\"arrest\\\" onClick={handleArrest}>\\r\\n            <GiHandcuffs className=\\\"cuffs\\\" color={accentColor} size={iconSize} /> <span>Arrest This Man/Girl</span>\\r\\n        </div>\\r\\n    );\\r\\n};\\r\\n\\r\\nexport default ArrestAction;\\r\\n\",\"// React module imports.\\r\\nimport React from \\\"react\\\";\\r\\n// Local imports.\\r\\nimport { useThemeObject } from '../../../hooks/themeHooks';\\r\\nimport UserInfo from \\\"./UserInfo/UserInfo\\\";\\r\\nimport CardContent from \\\"./CardContent/CardContent\\\";\\r\\nimport PostInfo from \\\"./PostInfo/PostInfo\\\";\\r\\nimport ArrestAction from \\\"./ArrestAction/ArrestAction\\\";\\r\\n// Style imports.\\r\\nimport './Card.css';\\r\\n\\r\\n// Card.js\\r\\nconst Card = ({ post }) => {\\r\\n\\r\\n    // Inline style variables.\\r\\n    const primaryText = useThemeObject(\\\"color\\\", \\\"primaryText\\\");\\r\\n    const borderColor = useThemeObject(\\\"backgroundColor\\\", \\\"border\\\");\\r\\n\\r\\n    return (\\r\\n        <div className=\\\"card-container\\\" style={primaryText}>\\r\\n            <UserInfo post={post} />\\r\\n            <div className=\\\"card\\\" style={borderColor}>\\r\\n                <CardContent\\r\\n                    post={post}\\r\\n                />\\r\\n                <PostInfo\\r\\n                    post={post}\\r\\n                />\\r\\n            </div>\\r\\n            <ArrestAction post={post} />\\r\\n        </div>\\r\\n    );\\r\\n};\\r\\n\\r\\nexport default Card;\",\"// subredditDataSlice.js\\r\\nimport { createSlice } from '@reduxjs/toolkit';\\r\\n\\r\\nconst subredditDataSlice = createSlice({\\r\\n  name: 'subredditData',\\r\\n  initialState: [],\\r\\n  reducers: {\\r\\n    setSubredditData: (state, action) => {\\r\\n      return action.payload;\\r\\n    },\\r\\n  },\\r\\n});\\r\\n\\r\\nexport const { setSubredditData } = subredditDataSlice.actions;\\r\\n\\r\\nexport const selectSubredditData = state => state.subredditData;\\r\\n\\r\\nexport default subredditDataSlice.reducer;\\r\\n\",\"// React module imports.\\r\\nimport React, { useEffect } from \\\"react\\\";\\r\\nimport { useSelector, useDispatch } from \\\"react-redux\\\";\\r\\n// Local imports. \\r\\nimport Card from './Card/Card';\\r\\nimport { setSubredditData, selectSubredditData } from \\\"../../redux/subredditDataSlice\\\";\\r\\nimport { selectSubreddit } from \\\"../../redux/subredditSlice\\\";\\r\\nimport { selectSort } from \\\"../../redux/sortSlice\\\";\\r\\nimport { selectArrestedUsers } from \\\"../../redux/arrestedSlice\\\";\\r\\n// Style imports.\\r\\n\\r\\n\\r\\nconst Posts = () => {\\r\\n\\r\\n    // Get and manage current subreddit and subreddit data. \\r\\n    const dispatch = useDispatch();\\r\\n    const subredditData = useSelector(selectSubredditData);\\r\\n    const currentSubreddit = useSelector(selectSubreddit);\\r\\n    const arrestedUsers = useSelector(selectArrestedUsers);\\r\\n\\r\\n    const fetchSubreddits = async () => {\\r\\n        try {\\r\\n            const subredditName = currentSubreddit;\\r\\n            const response = await fetch(`https://www.reddit.com/${subredditName}.json`);\\r\\n            const data = await response.json();\\r\\n\\r\\n            // Fetch the user data for each post\\r\\n            const postsWithUserData = await Promise.all(\\r\\n                data.data.children.map(async child => {\\r\\n                    const post = {\\r\\n                        postTitle: child.data.title,\\r\\n                        username: child.data.author,\\r\\n                        created: child.data.created,\\r\\n                        comments: child.data.num_comments,\\r\\n                        postHint: child.data.post_hint,\\r\\n                        url: child.data.url,\\r\\n                        postText: child.data.selftext_html,\\r\\n                        media: child.data.media,\\r\\n                        isVideo: child.data.is_video,\\r\\n                        pollData: child.data.poll_data,\\r\\n                        galleryData: child.data.gallery_data,\\r\\n                        mediaMetaData: child.data.media_metadata,\\r\\n                        crossposts: child.data.crosspost_parent_list,\\r\\n                        urlOverridden: child.data.url_overridden_by_dest\\r\\n                    };\\r\\n\\r\\n                    // Fetch the user data\\r\\n                    const userDataResponse = await fetch(`https://www.reddit.com/user/${post.username}/about.json`);\\r\\n                    const userData = await userDataResponse.json();\\r\\n\\r\\n                    // Add the user data to the post, only keeping the fields we need\\r\\n                    post.userData = {\\r\\n                        username: userData.data.name,\\r\\n                        karma: userData.data.total_karma,\\r\\n                        pfp: userData.data.icon_img\\r\\n                    };\\r\\n\\r\\n                    return post;\\r\\n                })\\r\\n            );\\r\\n\\r\\n            // Update your app's state or Redux store with the fetched subreddits\\r\\n            dispatch(setSubredditData(postsWithUserData));\\r\\n        } catch (error) {\\r\\n            console.error(\\\"Error fetching subreddits:\\\", error);\\r\\n            // Handle error appropriately\\r\\n        }\\r\\n    };\\r\\n\\r\\n\\r\\n    // Call the fetchSubreddits function to trigger the API request and update Redux state\\r\\n    useEffect(() => {\\r\\n        fetchSubreddits();\\r\\n        window.scrollTo(0, 0); // Go to top of page. \\r\\n    }, [currentSubreddit]);\\r\\n\\r\\n    // Filter posts by checking if post author is in arrested users list\\r\\n    const filteredPosts = subredditData.filter(post => !arrestedUsers.includes(post.username));\\r\\n\\r\\n    // Create a new, sorted array of posts based on sort state.\\r\\n    const sortOrder = useSelector(selectSort);\\r\\n    let sortedSubredditData = [];\\r\\n\\r\\n    if (sortOrder === \\\"descending\\\") {\\r\\n        sortedSubredditData = [...filteredPosts]\\r\\n            .sort((a, b) => b.userData.karma - a.userData.karma);\\r\\n    } else {\\r\\n        sortedSubredditData = [...filteredPosts]\\r\\n            .sort((a, b) => a.userData.karma - b.userData.karma);\\r\\n    }\\r\\n\\r\\n\\r\\n    return (\\r\\n        <div>\\r\\n            {sortedSubredditData.length > 0 ? (\\r\\n                sortedSubredditData\\r\\n                    .map((post, i) => (\\r\\n                        <Card\\r\\n                            post={post}\\r\\n                            key={i}\\r\\n                        />\\r\\n                    ))\\r\\n            ) : (\\r\\n                <p>Loading...</p>\\r\\n            )}\\r\\n        </div>\\r\\n    );\\r\\n};\\r\\nexport default Posts;\",\"// React module imports.\\r\\nimport React, { useEffect } from 'react';\\r\\nimport { useSelector } from 'react-redux';\\r\\n// Local imports.\\r\\nimport { useThemeColors, useThemeObject } from '../../hooks/themeHooks';\\r\\nimport { selectTheme } from '../../redux/themeSlice';\\r\\nimport { selectMenuButtonState } from '../../redux/menuButtonSlice';\\r\\nimport Header from '../../components/Header/Header';\\r\\nimport Sidebar from '../../components/Sidebar/Sidebar';\\r\\nimport Posts from '../../components/Posts/Posts';\\r\\n// Style imports\\r\\nimport './App.css';\\r\\nimport '../../stylesheets/globalStyles.css';\\r\\n\\r\\n\\r\\nexport default function App() {\\r\\n\\r\\n  // Get & manage theme state and theme variables.\\r\\n  const theme = useSelector(selectTheme);\\r\\n  const themeColors = useThemeColors();\\r\\n\\r\\n  // Inline style object.\\r\\n  const background = useThemeObject(\\\"backgroundColor\\\", \\\"background\\\");\\r\\n\\r\\n  // Update the CSS class of the body when the theme changes.\\r\\n  useEffect(() => {\\r\\n    document.body.className = theme;\\r\\n  }, [theme]);\\r\\n\\r\\n  // Set body element to background colour from theme.\\r\\n  document.body.style.backgroundColor = themeColors.background;\\r\\n\\r\\n  // Blur the site when the menu is open. \\r\\n  const menuButtonState = useSelector(selectMenuButtonState);\\r\\n\\r\\n  useEffect(() => {\\r\\n    const pageContainer = document.querySelector('.main-content');\\r\\n\\r\\n    if (menuButtonState === 'open') {\\r\\n      pageContainer.classList.add('blur');\\r\\n    } else {\\r\\n      pageContainer.classList.remove('blur');\\r\\n    }\\r\\n  }, [menuButtonState]);\\r\\n\\r\\n\\r\\n  return (\\r\\n    <div className=\\\"page-container\\\" style={background}>\\r\\n      <div className=\\\"container-wrap\\\">\\r\\n        <div className=\\\"App\\\">\\r\\n          <Header />\\r\\n          <div className='main-content'>\\r\\n            <Posts />\\r\\n          </div>\\r\\n          <div className='sidebar-container desktop'>\\r\\n            <Sidebar />\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\",\"import { configureStore } from '@reduxjs/toolkit';\\r\\nimport themeReducer from './themeSlice';\\r\\nimport sortReducer from './sortSlice';\\r\\nimport subredditReducer from './subredditSlice';\\r\\nimport menuButtonReducer from './menuButtonSlice';\\r\\nimport subredditButtonReducer from './subredditButtonSlice';\\r\\nimport subredditDataReducer from './subredditDataSlice';\\r\\nimport arrestedReducer from './arrestedSlice';\\r\\nimport arrestedButtonReducer from './arrestedButtonSlice';\\r\\n\\r\\n\\r\\nexport default configureStore({\\r\\n  reducer: {\\r\\n    theme: themeReducer,\\r\\n    sort: sortReducer,\\r\\n    subreddit: subredditReducer,\\r\\n    menu: menuButtonReducer,\\r\\n    subredditButton: subredditButtonReducer,\\r\\n    subredditData: subredditDataReducer,\\r\\n    arrested: arrestedReducer,\\r\\n    arrestedButton: arrestedButtonReducer\\r\\n  },\\r\\n})\\r\\n\",\"import React from 'react';\\r\\nimport ReactDOM from 'react-dom/client';\\r\\nimport './stylesheets/reset.css';\\r\\nimport './stylesheets/index.css';\\r\\nimport './stylesheets/globalStyles.css';\\r\\nimport App from './containers/App/App';\\r\\nimport { Provider } from 'react-redux'\\r\\nimport store from './redux/store';\\r\\n\\r\\nconst root = ReactDOM.createRoot(document.getElementById('root'));\\r\\nroot.render(\\r\\n  <React.StrictMode>\\r\\n    <Provider store={store}>\\r\\n      <App />\\r\\n    </Provider>\\r\\n  </React.StrictMode>\\r\\n);\\r\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{100:function(e,t,r){},102:function(e,t,r){},104:function(e,t,r){\"use strict\";r.r(t);var n,a,o=r(1),c=r.n(o),i=r(24),l=r.n(i),s=(r(41),r(43),r(23),r(2)),u=r(4),d={light:{background:\"#ECEFF4\",primaryText:\"#2E3440\",secondaryText:\"#4C566A\",accent:\"#D08770\",border:\"#D8DEE9\"},dark:{background:\"#1C1E26\",primaryText:\"#ECEFF4\",secondaryText:\"#88C0D0\",accent:\"#BF616A\",border:\"#4C566A\"}},m=Object(u.b)({name:\"theme\",initialState:{value:\"dark\"},reducers:{toggleTheme:function(e){e.value=\"dark\"===e.value?\"light\":\"dark\"}}}),f=m.actions.toggleTheme,p=function(e){return e.theme.value},h=m.reducer,b=function(){var e=Object(s.c)(p);return d[e]},v=function(e,t){var r=b(),n={};return n[e]=r[t],n},y=Object(u.b)({name:\"menuButton\",initialState:\"closed\",reducers:{toggleMenuButtonState:function(e){return\"closed\"===e?\"open\":\"closed\"}}}),E=y.actions.toggleMenuButtonState,g=function(e){return e.menu},w=y.reducer,k=r(5),N=(r(52),function(){var e=Object(s.b)(),t=function(){e(f())};return\"dark\"===Object(s.c)(p)?c.a.createElement(k.e,{color:\"#D9D9D9\",onClick:t,size:23}):c.a.createElement(k.h,{color:\"#F2CA00\",onClick:t,size:23})}),x=function(){return c.a.createElement(\"div\",{className:\"theme-icon\"},c.a.createElement(N,null))},O=r(8),j=(r(54),function(){var e=Object(o.useState)(!1),t=Object(O.a)(e,2),r=t[0],n=t[1],a=b().secondaryText,i=r?{boxShadow:\"0 0 3px 0 \".concat(a),borderColor:a,outline:\"none\"}:{};return c.a.createElement(\"form\",null,c.a.createElement(\"input\",{type:\"search\",placeholder:\"Search...\",style:i,onFocus:function(){return n(!0)},onBlur:function(){return n(!1)}}),c.a.createElement(\"button\",{type:\"submit\"},\"Search\"))}),_=r(27),C=(r(56),function(){var e=b(),t=v(\"backgroundColor\",\"primaryText\"),r=e.background,n=Object(s.c)(g),a=Object(s.b)(),o=\"open\"===n?\"menuIcon rotate\":\"menuIcon\";return c.a.createElement(\"div\",{className:\"menuButton-container\"},c.a.createElement(_.a,{className:o,style:t,color:r,size:\"35\",onClick:function(){a(E())}}))}),S=Object(u.b)({name:\"sort\",initialState:\"descending\",reducers:{setSortOrder:function(e,t){return t.payload}}}),T=S.actions.setSortOrder,L=function(e){return e.sort},D=S.reducer,A=(r(58),function(){var e=b().accent,t=Object(s.c)(L),r=Object(s.b)(),n=function(e){return function(){r(T(e))}};return c.a.createElement(\"div\",{className:\"arrows\"},c.a.createElement(k.c,{className:\"down-arrow \".concat(\"descending\"===t?\"selected\":\"\"),size:40,color:e,onClick:n(\"descending\")}),c.a.createElement(k.d,{className:\"up-arrow \".concat(\"ascending\"===t?\"selected\":\"\"),size:40,color:e,onClick:n(\"ascending\")}))}),B=Object(u.b)({name:\"subredditButton\",initialState:\"closed\",reducers:{toggleSubredditButtonState:function(e){return\"closed\"===e?\"open\":\"closed\"}}}),F=B.actions.toggleSubredditButtonState,z=function(e){return e.subredditButton},P=B.reducer,M=(r(60),function(){var e=v(\"backgroundColor\",\"accent\"),t=b().primaryText,r=Object(s.b)();return c.a.createElement(\"div\",{className:\"subreddits-button-container\"},c.a.createElement(\"button\",{id:\"subreddits-button\",type:\"button\",style:e,onClick:function(){r(F())}},c.a.createElement(\"span\",{id:\"subreddits-button-label\",style:{color:t}},\"Subreddits\")))}),G=r(33),U=r(28),I=Object(u.b)({name:\"subreddit\",initialState:\"r/radiohead\",reducers:{setSubreddit:function(e,t){return t.payload}}}),R=I.actions.setSubreddit,H=function(e){return e.subreddit},V=I.reducer,J=(r(62),function(){var e=v(\"color\",\"secondaryText\"),t=v(\"color\",\"accent\"),r=Object(s.c)(H),n=Object(s.b)(),a=function(e){return function(){n(R(e))}};return c.a.createElement(\"div\",null,c.a.createElement(\"ul\",{id:\"sr-list\",style:e},U.map(function(n,o){var i=r===n?Object(G.a)({},e,{textDecoration:\"underline\",fontWeight:\"bold\",color:t.color}):e;return c.a.createElement(\"li\",{id:\"sr-name\",key:o},c.a.createElement(\"button\",{id:\"sr-button\",type:\"button\",style:i,onClick:a(n)},n))})))}),K=Object(u.b)({name:\"arrestedButton\",initialState:\"closed\",reducers:{toggleArrestedButtonState:function(e){return\"closed\"===e?\"open\":\"closed\"}}}),W=K.actions.toggleArrestedButtonState,Y=function(e){return e.arrestedButton},q=K.reducer,Q=(r(64),function(){var e=v(\"backgroundColor\",\"accent\"),t=b().primaryText,r=Object(s.b)();return c.a.createElement(\"div\",{className:\"arrested-button-container\"},c.a.createElement(\"button\",{id:\"arrested-button\",type:\"button\",style:e,onClick:function(){r(W())}},c.a.createElement(\"span\",{id:\"arrested-button-label\",style:{color:t}},\"Arrested\")))}),X=Object(u.b)({name:\"arrested\",initialState:[],reducers:{addArrestedUser:function(e,t){e.push(t.payload)},removeArrestedUser:function(e,t){return e.filter(function(e){return e!==t.payload})},removeAllArrestedUsers:function(){return[]}}}),Z=X.actions,$=Z.addArrestedUser,ee=Z.removeArrestedUser,te=Z.removeAllArrestedUsers,re=function(e){return e.arrested},ne=X.reducer,ae=(r(66),function(){var e=v(\"color\",\"primaryText\"),t=v(\"color\",\"secondaryText\"),r=v(\"backgroundColor\",\"accent\"),n=v(\"color\",\"primaryText\"),a=Object(s.c)(re),o=0===a.length?\"No Users Currently Arrested\":\"Tap Username to Release\",i=Object(s.b)();return c.a.createElement(\"div\",{className:\"arrests-list-container\"},c.a.createElement(\"p\",{className:\"empty-message\",style:e},o),c.a.createElement(\"ul\",{id:\"arrests-list\",style:t},a.map(function(e,t){return c.a.createElement(\"div\",{className:\"arrested-user-container\"},c.a.createElement(\"li\",{id:\"arrested-name\",key:t,onClick:function(){return function(e){i(ee(e))}(e)}},e))})),a.length>1?c.a.createElement(\"button\",{id:\"release-all\",type:\"button\",style:r,onClick:function(){i(te())}},c.a.createElement(\"span\",{id:\"release-all-button-label\",style:n},\"Release All Users\")):c.a.createElement(c.a.Fragment,null))}),oe=(r(68),function(){var e=v(\"backgroundColor\",\"background\"),t=v(\"color\",\"accent\"),r=v(\"color\",\"secondaryText\"),n=v(\"backgroundColor\",\"background\"),a=Object(s.c)(g),i=Object(s.c)(z),l=Object(s.c)(Y),u=Object(s.b)(),d=\"\";d=\"open\"===a?\"menu-container mobile open\":\"menu-container mobile closed\";var m=\"\";m=\"open\"===i&&\"open\"===a?\"sr-list-container mobile open\":\"sr-list-container mobile closed\";var f=\"\";return f=\"open\"===l&&\"open\"===a?\"arrested-list-container mobile open\":\"arrested-list-container mobile closed\",Object(o.useEffect)(function(){\"open\"===i&&\"open\"===l&&u(F())},[l]),Object(o.useEffect)(function(){\"open\"===i&&\"open\"===l&&u(W())},[i]),c.a.createElement(\"div\",{className:\"header-container\",style:e},c.a.createElement(\"div\",{className:\"header\",style:e},c.a.createElement(\"h1\",{className:\"logo\"},c.a.createElement(\"span\",{className:\"karma\",style:t},\"KARMA\"),c.a.createElement(\"span\",{className:\"police\",style:r},\"POLICE\")),c.a.createElement(\"div\",{className:\"rightSide desktop\"},c.a.createElement(x,null),c.a.createElement(j,null)),c.a.createElement(\"div\",{className:\"menuButton mobile\"},c.a.createElement(C,null))),c.a.createElement(\"div\",{className:d},c.a.createElement(\"div\",{className:\"menu-block\",id:\"block-1\",style:n},c.a.createElement(x,null),c.a.createElement(j,null)),c.a.createElement(\"div\",{className:\"menu-block\",id:\"block-2\",style:n},c.a.createElement(M,null),c.a.createElement(Q,null),c.a.createElement(A,null)),c.a.createElement(\"div\",{className:m},c.a.createElement(\"div\",{className:\"list-block\",id:\"block-3\",style:n},c.a.createElement(J,null))),c.a.createElement(\"div\",{className:f},c.a.createElement(\"div\",{className:\"list-block\",id:\"block-4\",style:n},c.a.createElement(ae,null)))))}),ce=(r(70),function(){var e=v(\"backgroundColor\",\"border\"),t=v(\"color\",\"primaryText\");return c.a.createElement(\"div\",{className:\"sort\",style:e},c.a.createElement(\"p\",{id:\"sort-label\",style:t},\"Sort by Karma\"),c.a.createElement(A,null))}),ie=(r(72),function(){var e=v(\"backgroundColor\",\"border\"),t=v(\"color\",\"primaryText\");return c.a.createElement(\"div\",{className:\"Sidebar\"},c.a.createElement(\"div\",{className:\"sidebar-sort\",style:e},c.a.createElement(ce,null)),c.a.createElement(\"div\",{className:\"sidebar-sr-list\",style:e},c.a.createElement(\"p\",{className:\"sidebar-sr-label\",style:t},\"Subreddit\"),c.a.createElement(J,null)),c.a.createElement(\"div\",{className:\"sidebar-arrests-list\",style:e},c.a.createElement(\"p\",{className:\"sidebar-arrests-label\",style:t},\"Arrested Users\"),c.a.createElement(ae,null)))}),le=r(10),se=r(20),ue=(r(74),function(e){var t=e.post.userData,r=t.pfp,n=t.username,a=b().accent,o=r,i=o&&o.split(\"?\")[0];return c.a.createElement(\"div\",{className:\"user\"},o?c.a.createElement(\"img\",{className:\"user-pfp\",src:i,alt:\"Post Author PfP\",width:\"40px\",height:\"40px\"}):c.a.createElement(k.i,{color:a,size:\"40\"}),c.a.createElement(\"p\",{className:\"username\"},n))}),de=r(6),me=r.n(de),fe=r(13),pe=r(14),he=(r(77),function(e){var t=e.images,r=b().accent,n=Object(o.useState)(0),a=Object(O.a)(n,2),i=a[0],l=a[1],s=t[i];return c.a.createElement(\"div\",{className:\"gallery-viewer\"},i>0?c.a.createElement(k.a,{className:\"gallery-viewer-button\",size:\"60\",color:r,onClick:function(){l(function(e){return e-1})}}):c.a.createElement(c.a.Fragment,null),c.a.createElement(\"img\",{src:s,alt:\"Gallery img\"}),i<t.length-1?c.a.createElement(k.b,{className:\"gallery-viewer-button\",size:\"60\",color:r,onClick:function(){l(function(e){return e+1})}}):c.a.createElement(c.a.Fragment,null))}),be=(r(79),pe.a.a(n||(n=Object(fe.a)([\"\\n    color: \",\";\\n\\n    &:link {\\n    color: \",\";\\n    }\\n\\n    &:visited {\\n    color: \",\";\\n    }\"])),function(e){return e.themeColor},function(e){return e.themeColor},function(e){return e.themeColor})),ve=function(e){var t=e.post,r=t.galleryData,n=t.mediaMetaData,a=t.crossposts,o=t.media,i=t.postHint,l=t.isVideo,s=t.urlOverridden,u=t.url,d=t.postTitle,m=me.a.decode(u),f=me.a.decode(u),p=b().accent,h=[];r&&(h=r.items.map(function(e){var t=n&&n[e.media_id].s.u;return t&&me.a.decode(t)}));var v=[];a&&a[0].gallery_data&&(v=a[0].gallery_data.items.map(function(e){var t=a[0].media_metadata&&a[0].media_metadata[e.media_id].s.u;return t&&me.a.decode(t)}));var y=function(){var e=o.oembed.html.match(/src=[\"'](.*?)[\"']/)[1],t=me.a.decode(o.oembed.title);return c.a.createElement(\"div\",{className:\"youtube-video-container\"},c.a.createElement(\"iframe\",{className:\"video\",title:t,src:e,allowFullScreen:!0}))},E=function(){var e=me.a.decode(o.reddit_video.fallback_url);return c.a.createElement(\"div\",{className:\"reddit-video-container\"},c.a.createElement(\"iframe\",{className:\"video\",title:d,width:o.reddit_video.width,height:o.reddit_video.height,src:e}))},g=function(){var e=me.a.decode(a[0].media.reddit_video.fallback_url);return c.a.createElement(\"div\",{className:\"reddit-video-container\"},c.a.createElement(\"iframe\",{className:\"video\",title:d,width:a[0].media.reddit_video.width,height:a[0].media.reddit_video.height,src:e}))},w=function(){return c.a.createElement(\"div\",{className:\"image-container\"},c.a.createElement(\"img\",{className:\"post-image\",src:m,alt:\"\"}))},k=function(){return c.a.createElement(\"div\",{className:\"image-container\"},h.length>0&&c.a.createElement(he,{images:h}))},N=function(){return c.a.createElement(\"div\",{className:\"image-container\"},v.length>0&&c.a.createElement(he,{images:v}))},x=function(){return c.a.createElement(\"div\",{className:\"link-container\"},c.a.createElement(be,{href:m,target:\"_blank\",rel:\"noopener noreferrer\",themeColor:p},m))},O=function(){return c.a.createElement(\"div\",{className:\"link-container\"},c.a.createElement(be,{href:f,target:\"_blank\",rel:\"noopener noreferrer\",themeColor:p},f))};return c.a.createElement(\"div\",null,o&&\"youtube.com\"===o.type?y():o&&o.reddit_video?E():a?a[0].media&&a[0].media.reddit_video?g():a[0].gallery_data?N():\"image\"!==i||a[0].is_video||a[0].media?\"deleted\"===a[0].removed_by_category?c.a.createElement(\"p\",{className:\"error-message\"},\"This post has been deleted.\"):(console.log(\"Crosspost Error - Media Type Not Recognised\"),void console.log(t)):w():\"image\"!==i||l||o?r?k():\"link\"===i?x():s?O():c.a.createElement(c.a.Fragment,null):w())},ye=r(21),Ee=r.n(ye),ge=(r(92),pe.a.div(a||(a=Object(fe.a)([\"\\n    a {\\n        color: \",\";\\n        word-wrap: break-word;\\n        overflow-wrap: break-word;\\n    }\\n\\n    h1, h2, h3, h4, h5, h6 {\\n        padding-top: 20px;\\n        color: \",\";\\n    }\\n\\n    p {\\n        color: \",\";\\n        margin-left: 0px;\\n    }\\n\\n    table {\\n        width: 40%;\\n    }\\n\\n    th {\\n        color: \",\";\\n    }\\n\\n    tr {\\n        color: \",\";\\n    }\\n    \"])),function(e){return e.linkColor},function(e){return e.headingColor},function(e){return e.textColor},function(e){return e.headingColor},function(e){return e.textColor})),we=function(e){var t=e.post,r=t.postText,n=t.crossposts,a=\"\",i=\"\";n?(a=n[0].selftext_html&&me.a.decode(n[0].selftext_html),i=Ee.a.sanitize(a)):(a=r&&me.a.decode(r),i=Ee.a.sanitize(a));var l=Object(o.useRef)(null),s=window.location.origin;Object(o.useEffect)(function(){if(l.current)for(var e=l.current.getElementsByTagName(\"a\"),t=0;t<e.length;t++)e[t].href.startsWith(s)&&(e[t].href=e[t].href.replace(s,\"https://www.reddit.com/\")),e[t].target=\"_blank\",e[t].rel=\"noopener noreferrer\"},[a]);var u=b(),d=u.accent,m=u.secondaryText,f=u.primaryText;return c.a.createElement(ge,{className:\"post-text\",dangerouslySetInnerHTML:{__html:i},linkColor:d,textColor:m,headingColor:f,ref:l})},ke=(r(94),function(e){var t=e.post,r=t.postTitle,n=t.pollData,a=v(\"backgroundColor\",\"border\"),o=r&&me.a.decode(r);return c.a.createElement(\"div\",{className:\"card-content\",style:a},c.a.createElement(\"p\",{className:\"post-title\"},o),c.a.createElement(ve,{post:t}),function(){if(n)return c.a.createElement(\"div\",{className:\"poll-container\"},c.a.createElement(\"p\",null,'Reddit Poll - Not currently voteable, click \"View Poll\" to vote on Reddit.com'),c.a.createElement(\"ul\",null,n.options.map(function(e){return c.a.createElement(\"li\",{key:e.id},e.text)})))}(),c.a.createElement(we,{post:t}))}),Ne=(r(96),function(e){var t=e.post,r=t.created,n=t.comments,a=t.userData.karma,o=b().accent,i=new Date(1e3*r),l=\"\",s=0,u=(Date.now()-i)/1e3,d=Math.round(u/60),m=Math.round(d/60),f=Math.floor(m/24);return f>0&&(l=\"Day\",s=f),0===f&&(l=\"Hour\",s=m),0===m&&(l=\"Minute\",s=d),0===d&&(l=\"Second\",s=u),s>1&&(l+=\"s\"),c.a.createElement(\"div\",{className:\"post-info\"},c.a.createElement(\"div\",{className:\"karma-score\"},c.a.createElement(k.j,{color:o,size:20}),c.a.createElement(\"span\",null,a)),c.a.createElement(\"div\",{className:\"post-age\"},c.a.createElement(k.f,{color:o,size:20}),c.a.createElement(\"span\",null,s,\" \",l)),c.a.createElement(\"div\",{className:\"post-comments\"},c.a.createElement(k.g,{color:o,size:20}),c.a.createElement(\"span\",null,n)))}),xe=r(32),Oe=(r(98),function(e){var t=e.post.userData.username,r=Object(s.b)(),n=b().accent;return c.a.createElement(\"div\",{className:\"arrest\",onClick:function(){r($(t))}},c.a.createElement(xe.a,{className:\"cuffs\",color:n,size:\"40\"}),\" \",c.a.createElement(\"span\",null,\"Arrest This Man/Girl\"))}),je=(r(100),function(e){var t=e.post,r=v(\"color\",\"primaryText\"),n=v(\"backgroundColor\",\"border\");return c.a.createElement(\"div\",{className:\"card-container\",style:r},c.a.createElement(ue,{post:t}),c.a.createElement(\"div\",{className:\"card\",style:n},c.a.createElement(ke,{post:t}),c.a.createElement(Ne,{post:t})),c.a.createElement(Oe,{post:t}))}),_e=Object(u.b)({name:\"subredditData\",initialState:[],reducers:{setSubredditData:function(e,t){return t.payload}}}),Ce=_e.actions.setSubredditData,Se=function(e){return e.subredditData},Te=_e.reducer;function Le(){Le=function(){return e};var e={},t=Object.prototype,r=t.hasOwnProperty,n=Object.defineProperty||function(e,t,r){e[t]=r.value},a=\"function\"==typeof Symbol?Symbol:{},o=a.iterator||\"@@iterator\",c=a.asyncIterator||\"@@asyncIterator\",i=a.toStringTag||\"@@toStringTag\";function l(e,t,r){return Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{l({},\"\")}catch(C){l=function(e,t,r){return e[t]=r}}function s(e,t,r,a){var o=t&&t.prototype instanceof m?t:m,c=Object.create(o.prototype),i=new O(a||[]);return n(c,\"_invoke\",{value:w(e,r,i)}),c}function u(e,t,r){try{return{type:\"normal\",arg:e.call(t,r)}}catch(C){return{type:\"throw\",arg:C}}}e.wrap=s;var d={};function m(){}function f(){}function p(){}var h={};l(h,o,function(){return this});var b=Object.getPrototypeOf,v=b&&b(b(j([])));v&&v!==t&&r.call(v,o)&&(h=v);var y=p.prototype=m.prototype=Object.create(h);function E(e){[\"next\",\"throw\",\"return\"].forEach(function(t){l(e,t,function(e){return this._invoke(t,e)})})}function g(e,t){var a;n(this,\"_invoke\",{value:function(n,o){function c(){return new t(function(a,c){!function n(a,o,c,i){var l=u(e[a],e,o);if(\"throw\"!==l.type){var s=l.arg,d=s.value;return d&&\"object\"==typeof d&&r.call(d,\"__await\")?t.resolve(d.__await).then(function(e){n(\"next\",e,c,i)},function(e){n(\"throw\",e,c,i)}):t.resolve(d).then(function(e){s.value=e,c(s)},function(e){return n(\"throw\",e,c,i)})}i(l.arg)}(n,o,a,c)})}return a=a?a.then(c,c):c()}})}function w(e,t,r){var n=\"suspendedStart\";return function(a,o){if(\"executing\"===n)throw new Error(\"Generator is already running\");if(\"completed\"===n){if(\"throw\"===a)throw o;return _()}for(r.method=a,r.arg=o;;){var c=r.delegate;if(c){var i=k(c,r);if(i){if(i===d)continue;return i}}if(\"next\"===r.method)r.sent=r._sent=r.arg;else if(\"throw\"===r.method){if(\"suspendedStart\"===n)throw n=\"completed\",r.arg;r.dispatchException(r.arg)}else\"return\"===r.method&&r.abrupt(\"return\",r.arg);n=\"executing\";var l=u(e,t,r);if(\"normal\"===l.type){if(n=r.done?\"completed\":\"suspendedYield\",l.arg===d)continue;return{value:l.arg,done:r.done}}\"throw\"===l.type&&(n=\"completed\",r.method=\"throw\",r.arg=l.arg)}}}function k(e,t){var r=t.method,n=e.iterator[r];if(void 0===n)return t.delegate=null,\"throw\"===r&&e.iterator.return&&(t.method=\"return\",t.arg=void 0,k(e,t),\"throw\"===t.method)||\"return\"!==r&&(t.method=\"throw\",t.arg=new TypeError(\"The iterator does not provide a '\"+r+\"' method\")),d;var a=u(n,e.iterator,t.arg);if(\"throw\"===a.type)return t.method=\"throw\",t.arg=a.arg,t.delegate=null,d;var o=a.arg;return o?o.done?(t[e.resultName]=o.value,t.next=e.nextLoc,\"return\"!==t.method&&(t.method=\"next\",t.arg=void 0),t.delegate=null,d):o:(t.method=\"throw\",t.arg=new TypeError(\"iterator result is not an object\"),t.delegate=null,d)}function N(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function x(e){var t=e.completion||{};t.type=\"normal\",delete t.arg,e.completion=t}function O(e){this.tryEntries=[{tryLoc:\"root\"}],e.forEach(N,this),this.reset(!0)}function j(e){if(e){var t=e[o];if(t)return t.call(e);if(\"function\"==typeof e.next)return e;if(!isNaN(e.length)){var n=-1,a=function t(){for(;++n<e.length;)if(r.call(e,n))return t.value=e[n],t.done=!1,t;return t.value=void 0,t.done=!0,t};return a.next=a}}return{next:_}}function _(){return{value:void 0,done:!0}}return f.prototype=p,n(y,\"constructor\",{value:p,configurable:!0}),n(p,\"constructor\",{value:f,configurable:!0}),f.displayName=l(p,i,\"GeneratorFunction\"),e.isGeneratorFunction=function(e){var t=\"function\"==typeof e&&e.constructor;return!!t&&(t===f||\"GeneratorFunction\"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,p):(e.__proto__=p,l(e,i,\"GeneratorFunction\")),e.prototype=Object.create(y),e},e.awrap=function(e){return{__await:e}},E(g.prototype),l(g.prototype,c,function(){return this}),e.AsyncIterator=g,e.async=function(t,r,n,a,o){void 0===o&&(o=Promise);var c=new g(s(t,r,n,a),o);return e.isGeneratorFunction(r)?c:c.next().then(function(e){return e.done?e.value:c.next()})},E(y),l(y,i,\"Generator\"),l(y,o,function(){return this}),l(y,\"toString\",function(){return\"[object Generator]\"}),e.keys=function(e){var t=Object(e),r=[];for(var n in t)r.push(n);return r.reverse(),function e(){for(;r.length;){var n=r.pop();if(n in t)return e.value=n,e.done=!1,e}return e.done=!0,e}},e.values=j,O.prototype={constructor:O,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method=\"next\",this.arg=void 0,this.tryEntries.forEach(x),!e)for(var t in this)\"t\"===t.charAt(0)&&r.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if(\"throw\"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function n(r,n){return c.type=\"throw\",c.arg=e,t.next=r,n&&(t.method=\"next\",t.arg=void 0),!!n}for(var a=this.tryEntries.length-1;a>=0;--a){var o=this.tryEntries[a],c=o.completion;if(\"root\"===o.tryLoc)return n(\"end\");if(o.tryLoc<=this.prev){var i=r.call(o,\"catchLoc\"),l=r.call(o,\"finallyLoc\");if(i&&l){if(this.prev<o.catchLoc)return n(o.catchLoc,!0);if(this.prev<o.finallyLoc)return n(o.finallyLoc)}else if(i){if(this.prev<o.catchLoc)return n(o.catchLoc,!0)}else{if(!l)throw new Error(\"try statement without catch or finally\");if(this.prev<o.finallyLoc)return n(o.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var a=this.tryEntries[n];if(a.tryLoc<=this.prev&&r.call(a,\"finallyLoc\")&&this.prev<a.finallyLoc){var o=a;break}}o&&(\"break\"===e||\"continue\"===e)&&o.tryLoc<=t&&t<=o.finallyLoc&&(o=null);var c=o?o.completion:{};return c.type=e,c.arg=t,o?(this.method=\"next\",this.next=o.finallyLoc,d):this.complete(c)},complete:function(e,t){if(\"throw\"===e.type)throw e.arg;return\"break\"===e.type||\"continue\"===e.type?this.next=e.arg:\"return\"===e.type?(this.rval=this.arg=e.arg,this.method=\"return\",this.next=\"end\"):\"normal\"===e.type&&t&&(this.next=t),d},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.finallyLoc===e)return this.complete(r.completion,r.afterLoc),x(r),d}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.tryLoc===e){var n=r.completion;if(\"throw\"===n.type){var a=n.arg;x(r)}return a}}throw new Error(\"illegal catch attempt\")},delegateYield:function(e,t,r){return this.delegate={iterator:j(e),resultName:t,nextLoc:r},\"next\"===this.method&&(this.arg=void 0),d}},e}var De=function(){var e=Object(s.b)(),t=Object(s.c)(Se),r=Object(s.c)(H),n=Object(s.c)(re),a=function(){var t=Object(se.a)(Le().mark(function t(){var n,a,o,c;return Le().wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,n=r,t.next=4,fetch(\"https://www.reddit.com/\".concat(n,\".json\"));case 4:return a=t.sent,t.next=7,a.json();case 7:return o=t.sent,t.next=10,Promise.all(o.data.children.map(function(){var e=Object(se.a)(Le().mark(function e(t){var r,n,a;return Le().wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return r={postTitle:t.data.title,username:t.data.author,created:t.data.created,comments:t.data.num_comments,postHint:t.data.post_hint,url:t.data.url,postText:t.data.selftext_html,media:t.data.media,isVideo:t.data.is_video,pollData:t.data.poll_data,galleryData:t.data.gallery_data,mediaMetaData:t.data.media_metadata,crossposts:t.data.crosspost_parent_list,urlOverridden:t.data.url_overridden_by_dest},e.next=3,fetch(\"https://www.reddit.com/user/\".concat(r.username,\"/about.json\"));case 3:return n=e.sent,e.next=6,n.json();case 6:return a=e.sent,r.userData={username:a.data.name,karma:a.data.total_karma,pfp:a.data.icon_img},e.abrupt(\"return\",r);case 9:case\"end\":return e.stop()}},e)}));return function(t){return e.apply(this,arguments)}}()));case 10:c=t.sent,e(Ce(c)),t.next=17;break;case 14:t.prev=14,t.t0=t.catch(0),console.error(\"Error fetching subreddits:\",t.t0);case 17:case\"end\":return t.stop()}},t,null,[[0,14]])}));return function(){return t.apply(this,arguments)}}();Object(o.useEffect)(function(){a(),window.scrollTo(0,0)},[r]);var i=t.filter(function(e){return!n.includes(e.username)}),l=[];return l=\"descending\"===Object(s.c)(L)?Object(le.a)(i).sort(function(e,t){return t.userData.karma-e.userData.karma}):Object(le.a)(i).sort(function(e,t){return e.userData.karma-t.userData.karma}),c.a.createElement(\"div\",null,l.length>0?l.map(function(e,t){return c.a.createElement(je,{post:e,key:t})}):c.a.createElement(\"p\",null,\"Loading...\"))};r(102);function Ae(){var e=Object(s.c)(p),t=b(),r=v(\"backgroundColor\",\"background\");Object(o.useEffect)(function(){document.body.className=e},[e]),document.body.style.backgroundColor=t.background;var n=Object(s.c)(g);return Object(o.useEffect)(function(){var e=document.querySelector(\".main-content\");\"open\"===n?e.classList.add(\"blur\"):e.classList.remove(\"blur\")},[n]),c.a.createElement(\"div\",{className:\"page-container\",style:r},c.a.createElement(\"div\",{className:\"container-wrap\"},c.a.createElement(\"div\",{className:\"App\"},c.a.createElement(oe,null),c.a.createElement(\"div\",{className:\"main-content\"},c.a.createElement(De,null)),c.a.createElement(\"div\",{className:\"sidebar-container desktop\"},c.a.createElement(ie,null)))))}var Be=Object(u.a)({reducer:{theme:h,sort:D,subreddit:V,menu:w,subredditButton:P,subredditData:Te,arrested:ne,arrestedButton:q}});l.a.createRoot(document.getElementById(\"root\")).render(c.a.createElement(c.a.StrictMode,null,c.a.createElement(s.a,{store:Be},c.a.createElement(Ae,null))))},23:function(e,t,r){},28:function(e){e.exports=[\"r/radiohead\",\"r/britishproblems\",\"r/PizzaCrimes\",\"r/ProgrammerHumor\",\"r/softwaregore\",\"r/badcode\",\"r/AmITheAsshole\",\"r/chemicalreactiongifs\",\"r/programming\",\"r/shittyrobots\"]},34:function(e,t,r){e.exports=r(104)},41:function(e,t,r){},43:function(e,t,r){},52:function(e,t,r){},54:function(e,t,r){},56:function(e,t,r){},58:function(e,t,r){},60:function(e,t,r){},62:function(e,t,r){},64:function(e,t,r){},66:function(e,t,r){},68:function(e,t,r){},70:function(e,t,r){},72:function(e,t,r){},74:function(e,t,r){},77:function(e,t,r){},79:function(e,t,r){},92:function(e,t,r){},94:function(e,t,r){},96:function(e,t,r){},98:function(e,t,r){}},[[34,2,1]]]);","extractedComments":[]}